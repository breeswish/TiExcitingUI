{"version":3,"sources":["Sidemenu.js","Home.js","components/HostView.js","deploy/Hosts.js","deploy/Components.js","deploy/ViewTopology.js","deploy/Main.js","Progress.js","layers/HostList.js","layers/HostAdd.js","ManageCluster.js","App.js","store/layers.js","store/hosts.js","store/deployments.js","index.js"],"names":["Sider","SideMenu","inject","observer","state","collapsed","onCollapse","setState","this","props","location","layers","className","theme","mode","defaultSelectedKeys","selectedKeys","pathname","Item","key","to","type","selectable","onClick","item","hostListVisible","SubMenu","title","React","Component","withRouter","Home","animeRef","createRef","current","config","targets","querySelectorAll","easing","duration","delay","el","i","anime","timeline","add","strokeDashoffset","setDashoffset","offset","opacity","ref","viewBox","width","id","fill","stroke","d","VisDc","checkable","onChange","onCheckChange","indeterminate","checkIndeterminate","checked","style","marginRight","dcName","children","VisRack","rackName","bodyStyle","padding","VisHost","handleClick","clickable","host","classNames","Text","name","disabled","username","port","HostView","updateCheckedHost","onCheckedHostsChange","handleHostCheckChange","checkedHosts","handleRackCheckChange","checks","_","hosts","forEach","dc","rack","handleDcCheckChange","Object","keys","length","description","groupByDc","groupBy","toPairs","map","kv","sortBy","value","allDcs","allRacks","dcCheckStates","rackCheckStates","push","hasChecked","hasUnchecked","check","target","chunk","chunks","idx","gutter","span","onHostClick","hostChildren","DeployHost","hostChecks","handleCheckedHostsChange","handleSelectAll","handleDeSelectAll","handleNext","hostIds","onNextStep","error","content","hasHosts","bordered","extra","Group","hostAddVisible","DeployComponents","form","validateFields","err","values","getFieldDecorator","layout","valuePropName","initialValue","Wrapper","create","colors","componentTags","pd","color","tikv","tidb","prometheus","node_exporter","grafana","tispark","DeployViewTopology","topo","filteredHosts","filter","fromPairs","t","c","loading","inProgress","Hider","display","show","allocateOnLightestNode","topos","component","minValue","Number","MAX_VALUE","minNodeId","components","DeployMain","tabKey","inSubmitProgress","handleStartDeploy","submitData","hostId","role","server_ip","server_port","status_port","data_dir","pd_id","uniqid","deployInstance","deployments","addDeployment","axios","post","then","response","data","task_id","taskId","e","history","JSON","stringify","catch","console","log","Content","backgroundColor","subTitle","footer","animated","activeKey","TabPane","tab","ids","configs","componentsOriginal","supervise","metrics","Error","tikvInstances","Math","max","tidbInstances","organizeComponents","Progress","tasks","finished","match","params","socket","io","on","emit","res","task","steps","finish","step_id","step","removeAllListeners","close","statusMap","unfinished","running","spin","status","dataSource","renderItem","flexDirection","msg","LayerHostList","handleDeleteAll","closable","placement","visible","onClose","zIndex","drawerStyle","background","AddForm","isPubKeyAuth","templateValue","undefined","handleChangeAuthMethod","handleSubmit","onSubmit","handleSubmitAndNew","handleReset","resetFields","handleTemplateChange","v","toJS","setFieldsValue","defaultActiveKey","Panel","header","label","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","optionLabelProp","Option","rules","required","message","TextArea","Password","margin","AddFormWrapper","LayerHostAdd","hide","addHost","destroyOnClose","ManageCluster","App","minHeight","Sidemenu","exact","path","store","observable","action","bound","password","opts","parseInt","topology","parse","ReactDOM","render","storeHosts","storeDeployments","storeLayers","document","getElementById"],"mappings":"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","file":"static/js/main.5e340173.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport { observer, inject } from 'mobx-react';\n\nconst { Sider } = Layout;\n\n@inject('layers')\n@observer\nclass SideMenu extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { location, layers } = this.props;\n\n    return (\n      <Sider\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"vertical\" defaultSelectedKeys={['/']} selectedKeys={[location.pathname]}>\n          <Menu.Item key=\"/deploy\">\n            <NavLink to=\"/deploy\">\n              <Icon type=\"download\" />\n              部署\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/manage\">\n            <NavLink to=\"/manage\">\n              <Icon type=\"dashboard\" />\n              集群管理\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n        <Menu theme=\"dark\" mode=\"vertical\" selectable={false} onClick={(item) => {\n          if (item.key === 'hosts') {\n            layers.hostListVisible = true;\n          }\n        }}>\n          <Menu.Item key=\"hosts\">\n            <Icon type=\"deployment-unit\" />\n            配置机器\n          </Menu.Item>\n          <Menu.Item key=\"settings\">\n            <Icon type=\"setting\" />\n            设置\n          </Menu.Item>\n          <Menu.SubMenu\n            key=\"language\"\n            title={\n              <span>\n                <Icon type=\"global\" />\n                语言\n              </span>\n            }>\n            <Menu.Item key=\"zh\">\n              简体中文\n            </Menu.Item>\n            <Menu.Item key=\"en\">\n              英文\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default withRouter(SideMenu);\n","import { Layout } from 'antd';\nimport React from 'react';\nimport anime from 'animejs';\n\nexport default class Home extends React.Component {\n  animeRef = React.createRef();\n\n  componentDidMount() {\n    if (!this.animeRef.current) {\n      return;\n    }\n\n    const config = {\n      targets: this.animeRef.current.querySelectorAll('path'),\n      easing: 'easeInOutCubic',\n      duration: 1000,\n      delay: (el, i) => i * 250,\n    };\n\n    anime\n      .timeline()\n      .add({\n        ...config,\n        strokeDashoffset: [anime.setDashoffset, 0],\n      })\n      .add({\n        ...config,\n        offset: '+=500',\n        strokeDashoffset: [0, anime.setDashoffset],\n        opacity: 0,\n      });\n\n  }\n\n  render() {\n    return (\n      <Layout>\n        <svg ref={this.animeRef} viewBox=\"0 0 100 100\" width=\"400px\" id=\"logo\">\n          <path fill=\"none\" stroke=\"#ED1A3B\" d=\"M51.1 11.3L13.5 30.8 13.5 69.9 51.1 89.4 88.5 69.9 88.5 30.9z\" />\n          <path fill=\"none\" stroke=\"#ED1A3B\" d=\"M48.5 37.1L48.5 73.3 39.5 68.6 39.5 41.8 27.5 48 27.5 38.3 51 26.1 60.4 31z\"/>\n          <path fill=\"none\" stroke=\"#ED1A3B\" d=\"M67.5 66L58.5 70.7 58.5 42.2 67.5 37.5z\"/>\n        </svg>\n      </Layout>\n    );\n  }\n}\n","import { Icon, Col, Row, Card, Typography, Checkbox, Empty, Button } from 'antd';\nimport React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport './HostView.less';\n\n@observer\nclass VisDc extends React.Component {\n  render() {\n    return (\n      <div className=\"host-view-vis-dc\">\n        <div className=\"host-view-vis-dc-title\">\n          {this.props.checkable ? (\n            <Checkbox\n              onChange={this.props.onCheckChange}\n              indeterminate={this.props.checkIndeterminate}\n              checked={this.props.checked}\n              style={{ marginRight: '10px' }}\n            />\n          ) : null}\n          <Icon type=\"cloud\" /> 机房：{this.props.dcName || '默认'}\n        </div>\n        <div className=\"host-view-vis-dc-content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass VisRack extends React.Component {\n  render() {\n    return (\n      <Card\n        title={<>\n          {this.props.checkable ? (\n            <Checkbox\n              onChange={this.props.onCheckChange}\n              indeterminate={this.props.checkIndeterminate}\n              checked={this.props.checked}\n              style={{ marginRight: '10px' }}\n            />\n          ) : null}\n          <Icon type=\"database\" /> 机架：{this.props.rackName || '默认'}\n        </>}\n        // bordered={false}\n        bodyStyle={{ padding: 0 }}\n      >\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\n@observer\nclass VisHost extends React.Component {\n  handleClick = () => {\n    if (this.props.clickable && this.props.onClick) {\n      this.props.onClick(this.props.host);\n    }\n  }\n\n  render() {\n    return (\n      <div className={classNames([\"host-view-vis-host\", { clickable: this.props.clickable }])} key={this.props.host.id} onClick={this.handleClick}>\n        {this.props.checkable ? (\n          <Checkbox\n            onChange={this.props.onCheckChange}\n            checked={this.props.checked}\n            style={{ marginRight: '10px' }}\n          />\n        ) : null}\n        <div className=\"host-view-vis-host-content\">\n          <div><Typography.Text>{ this.props.host.name }</Typography.Text></div>\n          <div><Typography.Text disabled>{ this.props.host.username }@{ this.props.host.host }:{ this.props.host.port }</Typography.Text></div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass HostView extends React.Component {\n  updateCheckedHost = (checked) => {\n    if (this.props.onCheckedHostsChange) {\n      this.props.onCheckedHostsChange(checked);\n    }\n  }\n\n  handleHostCheckChange = (id, checked) => {\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      [id]: checked,\n    });\n  };\n\n  handleRackCheckChange = (dcName, rackName, checked) => {\n    const checks = {};\n    _(this.props.hosts).forEach(host => {\n      if (host.dc === dcName && host.rack === rackName) {\n        checks[host.id] = checked;\n      }\n    });\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      ...checks\n    });\n  };\n\n  handleDcCheckChange = (dcName, checked) => {\n    const checks = {};\n    _(this.props.hosts).forEach(host => {\n      if (host.dc === dcName) {\n        checks[host.id] = checked;\n      }\n    });\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      ...checks\n    });\n  };\n\n  render() {\n    const numberOfHosts = Object.keys(this.props.hosts).length;\n\n    if (numberOfHosts === 0) {\n      return (\n        <div style={{ padding: '50px' }}>\n          <Empty description=\"您还没有配置机器\"></Empty>\n        </div>\n      );\n    }\n\n    // Group hosts by DC and Rack\n    const groupByDc = _(this.props.hosts)\n      .groupBy('dc')\n      .toPairs()\n      .map((kv) => {\n        return [kv[0], _(kv[1])\n          .groupBy('rack')\n          .toPairs()\n          .sortBy(0)\n          .value()];\n      })\n      .sortBy(0)\n      .value();\n\n    const allDcs = {};\n    const allRacks = {};\n    const dcCheckStates = {};\n    const rackCheckStates = {};\n\n    if (this.props.checkable) {\n      _.forEach(this.props.hosts, host => {\n        if (!allDcs[host.dc]) {\n          allDcs[host.dc] = [];\n        }\n        allDcs[host.dc].push(host);\n        if (!allRacks[host.dc + '|' + host.rack]) {\n          allRacks[host.dc + '|' + host.rack] = [];\n        }\n        allRacks[host.dc + '|' + host.rack].push(host);\n      });\n\n\n      for (const dc in allDcs) {\n        let hasChecked = false;\n        let hasUnchecked = false;\n        allDcs[dc].forEach(item => {\n          if (this.props.checkedHosts && this.props.checkedHosts[item.id]) {\n            hasChecked = true;\n          } else {\n            hasUnchecked = true;\n          }\n        });\n        if (hasChecked && hasUnchecked) {\n          dcCheckStates[dc] = {\n            check: true,\n            indeterminate: true,\n          };\n        } else if (hasChecked) {\n          dcCheckStates[dc] = {\n            check: true,\n            indeterminate: false,\n          };\n        } else if (hasUnchecked) {\n          dcCheckStates[dc] = {\n            check: false,\n            indeterminate: false,\n          };\n        }\n      }\n\n      for (const rack in allRacks) {\n        let hasChecked = false;\n        let hasUnchecked = false;\n        allRacks[rack].forEach(item => {\n          if (this.props.checkedHosts[item.id]) {\n            hasChecked = true;\n          } else {\n            hasUnchecked = true;\n          }\n        });\n        if (hasChecked && hasUnchecked) {\n          rackCheckStates[rack] = {\n            check: true,\n            indeterminate: true,\n          };\n        } else if (hasChecked) {\n          rackCheckStates[rack] = {\n            check: true,\n            indeterminate: false,\n          };\n        } else if (hasUnchecked) {\n          rackCheckStates[rack] = {\n            check: false,\n            indeterminate: false,\n          };\n        }\n      }\n    }\n\n    return (\n      <>\n        {groupByDc.map((kv) =>\n          <VisDc\n            dcName={kv[0]}\n            key={kv[0]}\n            checkable={this.props.checkable}\n            checked={this.props.checkable && dcCheckStates[kv[0]].check}\n            checkIndeterminate={this.props.checkable && dcCheckStates[kv[0]].indeterminate}\n            onCheckChange={(target) => {\n              this.handleDcCheckChange(kv[0], target.target.checked)\n            }}\n          >\n            {_.chunk(kv[1], 3).map((chunks, idx) =>\n              <Row gutter={16} key={idx}>\n                {chunks.map(item => (\n                  <Col span={8} key={item[0]}>\n                    <VisRack\n                      rackName={item[0]}\n                      key={item[0]}\n                      checkable={this.props.checkable}\n                      checked={this.props.checkable && rackCheckStates[kv[0]+'|'+item[0]].check}\n                      checkIndeterminate={this.props.checkable && rackCheckStates[kv[0]+'|'+item[0]].indeterminate}\n                      onCheckChange={(target) => {\n                        this.handleRackCheckChange(kv[0], item[0], target.target.checked)\n                      }}\n                    >\n                      {item[1].map(host =>\n                        <VisHost\n                          host={host}\n                          key={host.id}\n                          clickable={this.props.clickable}\n                          onClick={this.props.onHostClick}\n                          checkable={this.props.checkable}\n                          checked={this.props.checkable && this.props.checkedHosts[host.id]}\n                          onCheckChange={(target) => {\n                            this.handleHostCheckChange(host.id, target.target.checked)}\n                          }\n                        >{ this.props.hostChildren ? this.props.hostChildren[host.id] : null }</VisHost>\n                      )}\n                    </VisRack>\n                  </Col>\n                ))}\n              </Row>\n            )}\n          </VisDc>\n        )}\n      </>\n    );\n  }\n}\n\nexport default HostView;\n","import _ from 'lodash';\nimport { Modal, Card, Empty, Button, Icon } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\n@inject('layers', 'hosts')\n@observer\nclass DeployHost extends React.Component {\n  state = {\n    hostChecks: {},\n  };\n\n  handleCheckedHostsChange = (hostChecks) => {\n    this.setState({ hostChecks });\n  }\n\n  handleSelectAll = () => {\n    const checks = {};\n    _.forEach(this.props.hosts.hosts, host => checks[host.id] = true);\n    this.setState({ hostChecks: checks });\n  }\n\n  handleDeSelectAll = () => {\n    this.setState({ hostChecks: {} });\n  }\n\n  handleNext = () => {\n    const hostIds = [];\n    for (let id in this.state.hostChecks) {\n      if (this.state.hostChecks[id]) {\n        hostIds.push(id);\n      }\n    }\n    if (hostIds.length === 0) {\n      Modal.error({\n        title: '操作失败',\n        content: '请选择至少一个目标机器用于部署 TiDB 集群',\n      });\n      return;\n    }\n    if (this.props.onNextStep) {\n      this.props.onNextStep(hostIds);\n    }\n  }\n\n  render() {\n    const hasHosts = Object.keys(this.props.hosts.hosts).length > 0;\n    return (\n      <Card\n        bordered={false}\n        title=\"请选择部署 TiDB 集群的目标机器\"\n        bodyStyle={{ padding: 0 }}\n        extra={\n          <Button.Group>\n            <Button onClick={() => this.props.layers.hostListVisible = true}>配置机器</Button>\n            <Button onClick={() => this.props.layers.hostAddVisible = true}>创建机器</Button>\n            <Button onClick={this.handleSelectAll}>全选</Button>\n            <Button onClick={this.handleDeSelectAll}>取消全选</Button>\n          </Button.Group>\n        }\n      >\n        { !hasHosts ? (\n          <Empty description=\"您还没有配置机器\">\n            <Button type=\"primary\" onClick={() => this.props.layers.hostAddVisible = true}>添加机器</Button>\n          </Empty>\n        ) : (\n          <>\n            <HostView\n              hosts={this.props.hosts.hosts}\n              checkable\n              onCheckedHostsChange={this.handleCheckedHostsChange}\n              checkedHosts={this.state.hostChecks}\n            />\n            <div style={{ padding: '16px' }}>\n              <Button type=\"primary\" onClick={this.handleNext}>保存并选择组件 <Icon type=\"right\" /></Button>\n            </div>\n          </>\n        ) }\n      </Card>\n    );\n  }\n}\n\nexport default DeployHost;\n","import { Card, Button, Form, Checkbox, Icon } from 'antd';\nimport React from 'react';\n\nclass DeployComponents extends React.Component {\n  handleNext = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onNextStep) {\n          this.props.onNextStep(values);\n        }\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Card\n        bordered={false}\n        title=\"请选择需要部署的 TiDB 组件\"\n      >\n        <Form layout=\"vertical\">\n        <Form.Item extra=\"PD 组件负责协调事务与调度数据，必选\">\n            <Checkbox disabled checked>PD</Checkbox>\n          </Form.Item>\n          <Form.Item extra=\"TiKV 组件负责存储数据，必选\">\n            <Checkbox disabled checked>TiKV</Checkbox>\n          </Form.Item>\n          <Form.Item extra=\"TiDB 组件提供 SQL 层计算功能，若不勾选则只部署 KV 数据库\">\n            {getFieldDecorator('tidb', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>TiDB</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"收集并存储所有组件及节点的监控，并提供可视化界面展示\">\n            {getFieldDecorator('metrics', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>监控（Prometheus、Node Exporter 及 Grafana）</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"TiSpark 组件可以计算大型分析型 SQL（OLAP）\">\n            {getFieldDecorator('tispark', {\n              valuePropName: 'checked',\n              initialValue: false,\n            })(\n            <Checkbox>TiSpark</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"在组件进程崩溃时基于 Supervise 自动重启组件（注：不会开机自启动）\">\n            {getFieldDecorator('supervise', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>Supervise 进程守护</Checkbox>\n            )}\n          </Form.Item>\n          <Button type=\"primary\" onClick={this.handleNext}>保存并预览部署方案 <Icon type=\"right\" /></Button>\n        </Form>\n      </Card>\n    );\n  }\n}\n\nconst Wrapper = Form.create({ name: 'deploy_components' })(DeployComponents);\n\nexport default Wrapper;\n","import _ from 'lodash';\nimport { Card, Tag, Button, Form, Checkbox, Icon, Typography } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\nconst colors = {\n  pd: 'red',\n  tikv: 'orange',\n  tidb: 'magenta',\n  prometheus: 'cyan',\n  node_exporter: 'blue',\n  grafana: 'purple',\n  tispark: 'gold',\n};\n\nconst componentTags = {\n  pd: <Tag key=\"pd\" color={colors['pd']}>PD</Tag>,\n  tikv: <Tag key=\"tikv\" color={colors['tikv']}>TiKV</Tag>,\n  tidb: <Tag key=\"tidb\" color={colors['tidb']}>TiDB</Tag>,\n  prometheus: <Tag key=\"prometheus\" color={colors['prometheus']}>Prometheus</Tag>,\n  node_exporter: <Tag key=\"node_exporter\" color={colors['node_exporter']}>NodeExporter</Tag>,\n  grafana: <Tag key=\"grafana\" color={colors['grafana']}>Grafana</Tag>,\n  tispark: <Tag key=\"tispark\" color={colors['tispark']}>TiSpark</Tag>,\n};\n\n@inject('hosts')\n@observer\nclass DeployViewTopology extends React.Component {\n  handleNext = () => {\n    if (this.props.onNextStep) {\n      this.props.onNextStep();\n    }\n  }\n\n  render() {\n    if (!this.props.topo) {\n      return null;\n    }\n\n    const filteredHosts = _(this.props.hosts.hosts)\n      .toPairs()\n      .filter((kv) => kv[0] in this.props.topo)\n      .fromPairs()\n      .value();\n\n    const hostChildren = {};\n    for (let id in this.props.topo) {\n      const t = [];\n      for (let c in this.props.topo[id]) {\n        if (this.props.topo[id][c]) {\n          t.push(componentTags[c]);\n        }\n      }\n      hostChildren[id] = t;\n    }\n\n    return (\n      <Card\n        bordered={false}\n        title=\"查看并修改部署方案\"\n        bodyStyle={{ padding: 0 }}\n      >\n        <Card>\n          <div><p>您可以在主机之间拖动组件，从而修改部署方案，或从此区域拖动组件到主机中。</p></div>\n          <div>{Object.values(componentTags)}</div>\n        </Card>\n        <HostView\n          hosts={filteredHosts}\n          hostChildren={hostChildren}\n        />\n        <div style={{ padding: '16px' }}>\n          <Button type=\"primary\" onClick={this.handleNext} loading={this.props.inProgress}>开始部署 <Icon type=\"right\" /></Button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default DeployViewTopology;\n","import _ from 'lodash';\nimport { Layout, PageHeader, Tabs, Modal } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport DeployHosts from './Hosts';\nimport DeployComponents from './Components';\nimport DeployViewTopology from './ViewTopology';\nimport uniqid from 'uniqid';\nimport axios from 'axios';\n\nclass Hider extends React.Component {\n  render() {\n    return (\n      <div style={{ display: this.props.show ? 'block' : 'none' }}>{this.props.children}</div>\n    )\n  }\n}\n\nfunction allocateOnLightestNode(topos, component) {\n  let minValue = Number.MAX_VALUE;\n  let minNodeId = null;\n\n  for (let id in topos) {\n    if (topos[id][component]) {\n      continue;\n    }\n    const components = _.filter(Object.values(topos[id])).length;\n    if (components < minValue) {\n      minValue = components;\n      minNodeId = id;\n    }\n  }\n\n  if (minNodeId) {\n    topos[minNodeId][component] = true;\n  }\n}\n\nfunction organizeComponents(hosts, componentsOriginal) {\n  const components = {...componentsOriginal};\n  delete components.supervise;\n  if (components.metrics) {\n    components.prometheus = true;\n    components.node_exporter = true;\n    components.grafana = true;\n    delete components.metrics;\n  }\n  if (hosts.length === 0) {\n    throw new Error('必须选择至少一个目标机器部署 TiDB 组件');\n  }\n  const topo = {};\n  hosts.forEach(id => topo[id] = {});\n  if (hosts.length === 1) {\n    // 1 machine, put all in one\n    topo[hosts[0]] = components;\n    return topo;\n  }\n\n  if (components.node_exporter) {\n    hosts.forEach(id => topo[id].node_exporter = true);\n    delete components.node_exporter;\n  }\n\n  if (hosts.length === 2) {\n    // 2 machine: Each component (except for the node_exporter) distributes on 1 node.\n    for (let key in components) {\n      if (components[key]) {\n        allocateOnLightestNode(topo, key);\n      }\n    }\n    return topo;\n  }\n  // Otherwise (>= 3):\n  // If tidb, allocate half of the machine for TiDB and half of the machine for TiKV.\n  // If not, allocate all mechines for TiKV.\n  let tikvInstances = Math.max(hosts.length, 3);\n  if (components.tidb) {\n    tikvInstances = Math.max(~~(hosts.length / 2), 3);\n  }\n  for (let i = 0; i < tikvInstances; i++) {\n    allocateOnLightestNode(topo, 'tikv');\n  }\n  components.tikv = false;\n  for (let i = 0; i < 3; i++) {\n    allocateOnLightestNode(topo, 'pd');\n  }\n  components.pd = false;\n  if (components.tidb) {\n    let tidbInstances = ~~(hosts.length / 2);\n    for (let i = 0; i < tidbInstances; i++) {\n      allocateOnLightestNode(topo, 'tidb');\n    }\n    components.tidb = false;\n  }\n  for (let key in components) {\n    if (components[key]) {\n      allocateOnLightestNode(topo, key);\n    }\n  }\n  return topo;\n}\n\n@inject('hosts', 'deployments')\n@observer\n@withRouter\nclass DeployMain extends React.Component {\n  state = {\n    tabKey: 'hosts',\n    hosts: [],\n    topo: null,\n    config: null,\n    inSubmitProgress: false,\n  };\n\n  // state = {\n  //   tabKey: 'components',\n  //   hosts: [this.props.hosts.hosts[Object.keys(this.props.hosts.hosts)[0]].id],\n  //   topo: null,\n  //   inSubmitProgress: false,\n  // };\n\n  handleStartDeploy = () => {\n    const submitData = [];\n    for (let hostId in this.state.topo) {\n      const host = this.props.hosts.hosts[hostId];\n      let c = this.state.topo[hostId];\n      if (c.tidb) {\n        submitData.push({\n          role: 'tidb',\n          server_ip: host.host,\n          server_port: 4000,\n          status_port: 10080,\n          data_dir: `/home/${host.username}/tidb`\n        });\n      }\n      if (c.tikv) {\n        submitData.push({\n          role: 'tikv',\n          server_ip: host.host,\n          server_port: 20160,\n          status_port: 20180,\n          data_dir: `/home/${host.username}/tikv`\n        });\n      }\n      if (c.pd) {\n        submitData.push({\n          pd_id: uniqid(),\n          role: 'pd',\n          server_ip: host.host,\n          server_port: 20160,\n          status_port: 20180,\n          data_dir: `/home/${host.username}/tikv`\n        });\n      }\n    }\n\n    const deployInstance = this.props.deployments.addDeployment(this.state.hosts, this.state.config, this.state.topo);\n\n    this.setState({ inSubmitProgress: true });\n\n    axios.post('/submitTask', submitData)\n      .then(response => {\n        if (response.data && response.data.task_id) {\n          try {\n            this.props.deployments.deployments[deployInstance.id].taskId = response.data.task_id;\n          } catch (e) {}\n          this.props.history.push(`/progress/${response.data.task_id}`);\n        } else {\n          this.setState({ inSubmitProgress: false });\n          Modal.error({\n            title: '递交失败',\n            content: '未知服务器响应 ' + JSON.stringify(response.data),\n          });\n        }\n      })\n      .catch(e => {\n        console.log(e);\n        this.setState({ inSubmitProgress: false });\n        Modal.error({\n          title: '递交失败'\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Content style={{ backgroundColor: '#FFF' }}>\n          <PageHeader\n            title=\"部署\"\n            subTitle=\"部署一个新的 TiDB / TiKV 集群\"\n            footer={\n              <Tabs\n                animated={false}\n                onChange={(tabKey) => this.setState({ tabKey })}\n                activeKey={this.state.tabKey}\n              >\n                <Tabs.TabPane tab=\"1. 目标机器\" key=\"hosts\" />\n                <Tabs.TabPane tab=\"2. 组件\" key=\"components\" disabled={this.state.hosts.length === 0} />\n                <Tabs.TabPane tab=\"3. 部署方案\" key=\"view_topo\" disabled={!this.state.topo} />\n              </Tabs>\n            }\n          />\n        </Layout.Content>\n        <Layout.Content style={{ padding: '20px' }}>\n          <Hider show={this.state.tabKey === 'hosts'}>\n            <DeployHosts onNextStep={ids => {\n              this.setState({ hosts: ids, tabKey: 'components' });\n            }}/>\n          </Hider>\n          <Hider show={this.state.tabKey === 'components'}>\n            <DeployComponents onNextStep={configs => {\n              const topo = organizeComponents(this.state.hosts, {\n                ...configs,\n                pd: true,\n                tikv: true,\n              });\n              this.setState({ config: configs });\n              this.setState({ tabKey: 'view_topo', topo });\n            }}/>\n          </Hider>\n          <Hider show={this.state.tabKey === 'view_topo'}>\n            <DeployViewTopology\n              topo={this.state.topo}\n              onNextStep={this.handleStartDeploy}\n              inProgress={this.state.inSubmitProgress}\n            />\n          </Hider>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n\nexport default DeployMain;\n","import _ from 'lodash';\nimport { Card, Layout, PageHeader, List, Icon, Result } from 'antd';\nimport React from 'react';\n\nimport io from 'socket.io-client';\n\nclass Progress extends React.Component {\n  state = {\n    tasks: [],\n    finished: false,\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    var socket = io();\n    socket.on('connect', () => {\n      socket.emit('deploy', { task_id: id });\n    });\n\n    socket.on('sync', (res) => {\n      console.log('sync', res);\n      if (this.state.tasks.length == 0) {\n        this.setState({ tasks: res.task.steps });\n      }\n    });\n\n    socket.on('task', (res) => {\n      console.log('task', res);\n\n      if (res.finish) {\n        this.setState({ finished: true });\n        return;\n      }\n\n      this.state.tasks.forEach((task, idx) => {\n        if (task.step_id == res.step.step_id) {\n          this.state.tasks[idx] = res.step;\n        }\n      });\n      this.setState({ tasks: [...this.state.tasks] });\n    });\n\n    this.socket = socket;\n  }\n\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.removeAllListeners();\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n\n  render() {\n    const statusMap = {\n      finished: <Icon type=\"check-circle\" style={{ color: '#37b24d' }} />,\n      unfinished: null,\n      running: <Icon type=\"loading\" spin style={{ color: '#fa5252' }} />,\n    };\n    if (this.state.finished) {\n      return <Result\n        status=\"success\"\n        title=\"集群部署成功！\"\n      />;\n    } else {\n      return (\n        <Layout>\n          <Layout.Content style={{ backgroundColor: '#FFF' }}>\n            <PageHeader\n              title=\"部署进度\"\n              subTitle=\"正在部署集群...\"\n            />\n          </Layout.Content>\n          <Layout.Content style={{ padding: '20px' }}>\n            <Card bordered={false}>\n              <List\n                bordered\n                dataSource={this.state.tasks}\n                renderItem={item => (\n                  <List.Item style={{ display: 'flex', flexDirection: 'row' }}>\n                    <div style={{ width: '60px' }}>\n                      {statusMap[item.status]}\n                    </div>\n                    <div>{item.msg}</div>\n                  </List.Item>\n                )}\n              />\n            </Card>\n          </Layout.Content>\n        </Layout>\n      );\n    }\n  }\n}\n\nexport default Progress;\n","import _ from 'lodash';\nimport { Drawer, Icon, Layout, Button } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\n@inject('layers', 'hosts')\n@observer\nclass LayerHostList extends React.Component {\n  state = {\n    hostChecks: {},\n  };\n\n  handleCheckedHostsChange = (hostChecks) => {\n    this.setState({ hostChecks });\n  };\n\n  handleSelectAll = () => {\n    const checks = {};\n    _.forEach(this.props.hosts.hosts, host => checks[host.id] = true);\n    this.setState({ hostChecks: checks });\n  };\n\n  handleDeSelectAll = () => {\n    this.setState({ hostChecks: {} });\n  };\n\n  handleDeleteAll = () => {\n    for (let id in this.state.hostChecks) {\n      if (this.state.hostChecks[id]) {\n        delete this.props.hosts.hosts[id];\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Drawer\n        closable\n        title={<span><Icon type=\"deployment-unit\" /> 配置机器</span>}\n        placement=\"right\"\n        visible={this.props.layers.hostListVisible}\n        onClose={() => this.props.layers.hostListVisible = false}\n        zIndex={500}\n        width=\"100vw\"\n        drawerStyle={{ background: '#f0f2f5' }}\n        bodyStyle={{ padding: 0 }}\n      >\n        <Layout.Content style={{ background: '#FFF', padding: '16px' }}>\n          <Button type=\"primary\" onClick={() => this.props.layers.hostAddVisible = true} style={{ marginRight: '10px' }}>创建机器</Button>\n          <Button.Group style={{ marginRight: '10px' }}>\n            <Button onClick={this.handleSelectAll}>全选</Button>\n            <Button onClick={this.handleDeSelectAll}>取消全选</Button>\n          </Button.Group>\n          <Button.Group style={{ marginRight: '10px' }}>\n            <Button>批量编辑</Button>\n            <Button onClick={this.handleDeleteAll}>批量删除</Button>\n          </Button.Group>\n        </Layout.Content>\n        <HostView\n          hosts={this.props.hosts.hosts}\n          clickable\n          checkable\n          onHostClick={(item) => console.log(item)}\n          onCheckedHostsChange={this.handleCheckedHostsChange}\n          checkedHosts={this.state.hostChecks}\n        />\n      </Drawer>\n    );\n  }\n}\n\nexport default LayerHostList;\n","import { Drawer, Form, Input, Checkbox, Button, Select, Typography, Collapse } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { toJS } from 'mobx';\n\n@inject('hosts')\n@observer\nclass AddForm extends React.Component {\n  state = {\n    isPubKeyAuth: false,\n    templateValue: undefined,\n  };\n\n  handleChangeAuthMethod = e => {\n    this.setState({\n      isPubKeyAuth: e.target.checked,\n    });\n  };\n\n  handleSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onSubmit) {\n          this.props.onSubmit(values, true);\n        }\n      }\n    });\n  };\n\n  handleSubmitAndNew = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onSubmit) {\n          this.props.onSubmit(values, false);\n          this.handleReset();\n        }\n      }\n    });\n  }\n\n  handleReset = () => {\n    this.props.form.resetFields();\n    this.setState({\n      templateValue: undefined,\n    });\n  };\n\n  handleTemplateChange = (id) => {\n    this.setState({\n      templateValue: id,\n    });\n    let v = toJS(this.props.hosts.hosts[id]);\n    this.props.form.setFieldsValue({\n      ...v,\n      name: '',\n      host: '',\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"vertical\">\n        <Collapse bordered={false} defaultActiveKey={['import', 'basic']}>\n          <Collapse.Panel header=\"导入模板\" key=\"import\">\n            <Form.Item label=\"从现有主机配置复制\">\n              <Select\n                showSearch\n                placeholder=\"选择主机\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) => {\n                  const v = option.props.label.toLowerCase() + '|' + option.props.value.username + '@' + option.props.value.host + ':' + option.props.value.port;\n                  return v.indexOf(input.toLowerCase()) >= 0;\n                }}\n                optionLabelProp=\"label\"\n                onChange={this.handleTemplateChange}\n                value={this.state.templateValue}\n              >\n                {Object.values(this.props.hosts.hosts).map(v => {\n                  return (\n                    <Select.Option value={v.id} label={v.name} key={v.id}>\n                      <div>{v.name}</div>\n                      <div><Typography.Text disabled>{v.username}@{v.host}:{v.port}</Typography.Text></div>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          </Collapse.Panel>\n          <Collapse.Panel header=\"详细配置\" key=\"basic\">\n            <Form.Item label=\"唯一名称\">\n              {getFieldDecorator('name')(\n                <Input placeholder=\"留空自动生成\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"地址\">\n              {getFieldDecorator('host', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入主机地址',\n                  },\n                ],\n              })(\n                <Input placeholder=\"主机地址，IP 或域名\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"端口\">\n              {getFieldDecorator('port', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入端口',\n                  },\n                ],\n                initialValue: '22',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item label=\"登录用户名\">\n              {getFieldDecorator('username', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入登录用户名',\n                  },\n                ],\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('isPubKeyAuth', {\n                initialValue: false,\n              })(\n                <Checkbox checked={this.state.isPubKeyAuth} onChange={this.handleChangeAuthMethod}>使用私钥登录</Checkbox>\n              )}\n            </Form.Item>\n            {this.state.isPubKeyAuth ? (\n              <>\n                <Form.Item label=\"私钥\">\n                  {getFieldDecorator('privateKey', {\n                    rules: [\n                      {\n                        required: true,\n                        message: '请输入私钥',\n                      },\n                    ],\n                  })(\n                    <Input.TextArea />\n                  )}\n                </Form.Item>\n                <Form.Item label=\"私钥密码\">\n                  {getFieldDecorator('privateKeyPassword')(\n                    <Input.Password />\n                  )}\n                </Form.Item>\n              </>\n            ) : (\n              <Form.Item label=\"密码\">\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入登录密码',\n                    },\n                  ],\n                })(\n                  <Input.Password />\n                )}\n              </Form.Item>\n            )}\n          </Collapse.Panel>\n          <Collapse.Panel header=\"高级配置\" key=\"advanced\">\n            <Form.Item label=\"位置标签: DC\">\n              {getFieldDecorator('dc', {\n                initialValue: '',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item label=\"位置标签: Rack\">\n              {getFieldDecorator('rack', {\n                initialValue: '',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n          </Collapse.Panel>\n        </Collapse>\n        <div style={{ margin: '16px' }}>\n          <Button type=\"primary\" onClick={this.handleSubmit}>添加</Button>&nbsp;\n          <Button onClick={this.handleSubmitAndNew}>保存并添加下一个</Button>&nbsp;\n          <Button onClick={this.handleReset}>重置</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst AddFormWrapper = Form.create({ name: 'add_form' })(AddForm);\n\n@inject('layers', 'hosts')\n@observer\nclass LayerHostAdd extends React.Component {\n  handleSubmit = (values, hide) => {\n    if (this.props.hosts.addHost(values)) {\n      if (hide) {\n        this.props.layers.hostAddVisible = false;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Drawer\n        closable\n        destroyOnClose\n        title=\"添加 SSH 远程主机\"\n        placement=\"right\"\n        visible={this.props.layers.hostAddVisible}\n        onClose={() => this.props.layers.hostAddVisible = false}\n        zIndex={501}\n        width={400}\n        bodyStyle={{ padding: 0 }}\n      >\n        <AddFormWrapper onSubmit={this.handleSubmit} />\n      </Drawer>\n    );\n  }\n}\n\n\nexport default LayerHostAdd;\n","import _ from 'lodash';\nimport { Card, Tag, Button, Form, Checkbox, Icon, Typography } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\n\n@inject('deployments')\n@observer\nclass ManageCluster extends React.Component {\n  render() {\n    return (\n      <div>aaa</div>\n    );\n  }\n}\n\nexport default ManageCluster;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Sidemenu from './Sidemenu';\nimport { Layout } from 'antd';\nimport './App.css';\n\nimport Home from './Home';\nimport DeployMain from './deploy/Main';\nimport Progress from './Progress';\nimport LayerHostList from './layers/HostList';\nimport LayerHostAdd from './layers/HostAdd';\nimport ManageCluster from './ManageCluster';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sidemenu />\n        <Layout.Content>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/deploy\">\n              <DeployMain />\n            </Route>\n            <Route path=\"/manage\" component={ManageCluster} />\n            <Route path=\"/progress/:id\" component={Progress} />\n          </Switch>\n        </Layout.Content>\n        <LayerHostList />\n        <LayerHostAdd />\n      </Layout>\n    );\n  }\n}\n","import { observable } from 'mobx';\n\nclass Store {\n  @observable hostListVisible = false;\n  @observable hostAddVisible = false;\n}\n\nconst store = new Store();\n\nexport default store;\n","import { Modal } from 'antd';\nimport { observable, action } from 'mobx';\nimport uniqid from 'uniqid';\n\nclass Store {\n  @observable hosts = {};\n\n  constructor() {\n    this.addHost({\n      name: 'uhost-ap3kilnh',\n      host: '10.9.164.80',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-1',\n    });\n    this.addHost({\n      name: 'uhost-kesclakw',\n      host: '10.9.136.246',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-1',\n    });\n    this.addHost({\n      name: 'uhost-ou3hu5yx',\n      host: '10.9.158.146',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-2',\n    });\n    this.addHost({\n      name: 'uhost-x2ofoajg',\n      host: '10.9.111.178',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-2',\n    });\n    this.addHost({\n      name: 'uhost-ahdkyu5j',\n      host: '10.9.106.240',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-1',\n    });\n    this.addHost({\n      name: 'uhost-keoznqgf',\n      host: '10.9.13.204',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-2',\n    });\n    this.addHost({\n      host: '192.168.233.128',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n    this.addHost({\n      host: '192.168.233.129',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n    this.addHost({\n      host: '192.168.233.130',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n    this.addHost({\n      host: '192.168.233.131',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n  }\n\n  @action.bound\n  addHost(opts) {\n    if (!opts.name) {\n      opts.name = `${opts.username}@${opts.host}:${opts.port}`;\n    }\n    opts.port = parseInt(opts.port);\n    if (!opts.port) {\n      Modal.error({\n        title: '添加失败',\n        content: `无效端口`,\n      });\n      return false;\n    }\n    if (Object.values(this.hosts).map(v => v.host).indexOf(opts.host) !== -1) {\n      Modal.error({\n        title: '添加失败',\n        content: `主机 ${opts.host} 已存在，不能重复添加`,\n      });\n      return false;\n    }\n    // TODO: 检查 name 格式\n    if (Object.values(this.hosts).map(v => v.name).indexOf(opts.name) !== -1) {\n      Modal.error({\n        title: '添加失败',\n        content: `唯一名称 ${opts.name} 已存在，不能重复添加`,\n      });\n      return false;\n    }\n    opts.id = uniqid();\n    opts.dc = opts.dc || '';\n    opts.rack = opts.rack || '';\n    this.hosts[opts.id] = opts;\n    return true;\n  }\n}\n\nconst store = new Store();\n\nexport default store;\n","import { observable, action, toJS } from 'mobx';\nimport uniqid from 'uniqid';\n\nclass Store {\n  @observable deployments = {};\n\n  @action.bound\n  addDeployment(hosts, config, topology) {\n    const d = {\n      id: uniqid(),\n      hosts: JSON.parse(JSON.stringify(hosts)),\n      config: JSON.parse(JSON.stringify(config)),\n      topology: JSON.parse(JSON.stringify(topology)),\n    };\n    this.deployments[d.id] = d;\n    console.log(d);\n    return d;\n  }\n}\n\nconst store = new Store();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport storeLayers from './store/layers';\nimport storeHosts from './store/hosts';\nimport storeDeployments from './store/deployments';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider\n      hosts={storeHosts}\n      deployments={storeDeployments}\n      layers={storeLayers}\n    >\n      <App />\n    </Provider>\n  </BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}