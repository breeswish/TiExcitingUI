{"version":3,"sources":["Sidemenu.js","Home.js","components/HostView.js","deploy/Hosts.js","deploy/Components.js","deploy/ViewTopology.js","deploy/Main.js","Progress.js","layers/HostList.js","layers/HostAdd.js","ManageCluster.js","App.js","store/layers.js","store/hosts.js","store/deployments.js","index.js"],"names":["Sider","SideMenu","inject","observer","state","collapsed","onCollapse","setState","this","props","location","layers","className","theme","mode","defaultSelectedKeys","selectedKeys","pathname","Item","key","to","type","selectable","onClick","item","hostListVisible","SubMenu","title","React","Component","withRouter","Home","showText","animeRef","createRef","current","config","targets","querySelectorAll","easing","duration","delay","el","i","anime","timeline","add","strokeDashoffset","setDashoffset","offset","opacity","finished","then","style","padding","textAlign","display","Title","Paragraph","margin","ref","viewBox","width","id","fill","stroke","d","VisDc","checkable","onChange","onCheckChange","indeterminate","checkIndeterminate","checked","marginRight","dcName","children","VisRack","rackName","bodyStyle","VisHost","handleClick","clickable","host","classNames","Text","name","username","port","HostView","updateCheckedHost","onCheckedHostsChange","handleHostCheckChange","checkedHosts","handleRackCheckChange","checks","_","hosts","forEach","dc","rack","handleDcCheckChange","Object","keys","length","description","groupByDc","groupBy","toPairs","map","kv","sortBy","value","allDcs","allRacks","dcCheckStates","rackCheckStates","push","hasChecked","hasUnchecked","check","target","chunk","chunks","idx","gutter","span","onHostClick","hostChildren","DeployHost","hostChecks","handleCheckedHostsChange","handleSelectAll","handleDeSelectAll","handleNext","hostIds","onNextStep","error","content","hasHosts","bordered","extra","Group","hostAddVisible","DeployComponents","form","validateFields","err","values","getFieldDecorator","layout","disabled","valuePropName","initialValue","Wrapper","create","colors","componentTags","pd","color","tikv","tidb","prometheus","node_exporter","grafana","tispark","DeployViewTopology","topo","filteredHosts","filter","fromPairs","t","c","loading","inProgress","Hider","show","allocateOnLightestNode","topos","component","minValue","Number","MAX_VALUE","minNodeId","components","DeployMain","tabKey","inSubmitProgress","handleStartDeploy","submitData","hostId","role","server_ip","server_port","status_port","data_dir","pd_id","uniqid","deployInstance","deployments","addDeployment","axios","post","response","data","task_id","taskId","e","history","JSON","stringify","catch","console","log","Content","backgroundColor","subTitle","footer","animated","activeKey","TabPane","tab","ids","configs","componentsOriginal","supervise","metrics","Error","tikvInstances","Math","max","tidbInstances","organizeComponents","Progress","tasks","deployId","match","params","socket","io","on","emit","res","task","steps","finish","step_id","step","removeAllListeners","close","statusMap","unfinished","running","spin","status","dataSource","renderItem","flexDirection","msg","LayerHostList","handleDeleteAll","closable","placement","visible","onClose","zIndex","drawerStyle","background","AddForm","isPubKeyAuth","templateValue","undefined","handleChangeAuthMethod","handleSubmit","onSubmit","handleSubmitAndNew","handleReset","resetFields","handleTemplateChange","v","toJS","setFieldsValue","defaultActiveKey","Panel","header","label","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","optionLabelProp","Option","rules","required","message","TextArea","Password","AddFormWrapper","LayerHostAdd","hide","addHost","destroyOnClose","ManageCluster","activeDeployId","deploy","topology","renderChild","minHeight","defaultOpenKeys","App","Sidemenu","exact","path","store","observable","action","bound","password","opts","parseInt","parse","ReactDOM","render","storeHosts","storeDeployments","storeLayers","document","getElementById"],"mappings":"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","file":"static/js/main.addeaa02.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport { observer, inject } from 'mobx-react';\n\nconst { Sider } = Layout;\n\n@inject('layers')\n@observer\nclass SideMenu extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { location, layers } = this.props;\n\n    return (\n      <Sider\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"vertical\" defaultSelectedKeys={['/']} selectedKeys={[location.pathname]}>\n          <Menu.Item key=\"/deploy\">\n            <NavLink to=\"/deploy\">\n              <Icon type=\"download\" />\n              部署\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/manage\">\n            <NavLink to=\"/manage\">\n              <Icon type=\"dashboard\" />\n              集群管理\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n        <Menu theme=\"dark\" mode=\"vertical\" selectable={false} onClick={(item) => {\n          if (item.key === 'hosts') {\n            layers.hostListVisible = true;\n          }\n        }}>\n          <Menu.Item key=\"hosts\">\n            <Icon type=\"deployment-unit\" />\n            配置机器\n          </Menu.Item>\n          <Menu.Item key=\"settings\">\n            <Icon type=\"setting\" />\n            设置\n          </Menu.Item>\n          <Menu.SubMenu\n            key=\"language\"\n            title={\n              <span>\n                <Icon type=\"global\" />\n                语言\n              </span>\n            }>\n            <Menu.Item key=\"zh\">\n              简体中文\n            </Menu.Item>\n            <Menu.Item key=\"en\">\n              英文\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default withRouter(SideMenu);\n","import { Layout, Typography } from 'antd';\nimport React from 'react';\nimport anime from 'animejs';\n\nexport default class Home extends React.Component {\n  state = {\n    showText: false,\n  };\n\n  animeRef = React.createRef();\n\n  componentDidMount() {\n    if (!this.animeRef.current) {\n      return;\n    }\n\n    const config = {\n      targets: this.animeRef.current.querySelectorAll('path'),\n      easing: 'easeInOutCubic',\n      duration: 1000,\n      delay: (el, i) => i * 250,\n    };\n\n\n    anime\n      .timeline()\n      .add({\n        ...config,\n        strokeDashoffset: [anime.setDashoffset, anime.setDashoffset],\n      })\n      .add({\n        ...config,\n        offset: '+=1000',\n        strokeDashoffset: [anime.setDashoffset, 0],\n      })\n      .add({\n        ...config,\n        offset: '+=500',\n        strokeDashoffset: [0, anime.setDashoffset],\n        opacity: 0,\n      })\n      .finished.then(() => {\n        this.setState({ showText: true });\n      });\n  }\n\n  render() {\n    return (\n      <Layout style={{ padding: '30px 0' }}>\n        <div style={{ textAlign: 'center', display: this.state.showText ? 'block' : 'none' }}>\n          <Typography.Title>TiExciting</Typography.Title>\n          <Typography.Paragraph type=\"secondary\">Make TiDB Exciting Again!</Typography.Paragraph>\n        </div>\n        <div style={{ margin: '50px 0', textAlign: 'center' }}>\n        <svg ref={this.animeRef} viewBox=\"0 0 100 100\" width=\"400px\" id=\"logo\">\n          <path fill=\"none\" stroke=\"#ED1A3B\" d=\"M51.1 11.3L13.5 30.8 13.5 69.9 51.1 89.4 88.5 69.9 88.5 30.9z\" />\n          <path fill=\"none\" stroke=\"#ED1A3B\" d=\"M48.5 37.1L48.5 73.3 39.5 68.6 39.5 41.8 27.5 48 27.5 38.3 51 26.1 60.4 31z\"/>\n          <path fill=\"none\" stroke=\"#ED1A3B\" d=\"M67.5 66L58.5 70.7 58.5 42.2 67.5 37.5z\"/>\n        </svg>\n      </div></Layout>\n    );\n  }\n}\n","import { Icon, Col, Row, Card, Typography, Checkbox, Empty, Button } from 'antd';\nimport React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport './HostView.less';\n\n@observer\nclass VisDc extends React.Component {\n  render() {\n    return (\n      <div className=\"host-view-vis-dc\">\n        <div className=\"host-view-vis-dc-title\">\n          {this.props.checkable ? (\n            <Checkbox\n              onChange={this.props.onCheckChange}\n              indeterminate={this.props.checkIndeterminate}\n              checked={this.props.checked}\n              style={{ marginRight: '10px' }}\n            />\n          ) : null}\n          <Icon type=\"cloud\" /> 机房：{this.props.dcName || '默认'}\n        </div>\n        <div className=\"host-view-vis-dc-content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass VisRack extends React.Component {\n  render() {\n    return (\n      <Card\n        title={<>\n          {this.props.checkable ? (\n            <Checkbox\n              onChange={this.props.onCheckChange}\n              indeterminate={this.props.checkIndeterminate}\n              checked={this.props.checked}\n              style={{ marginRight: '10px' }}\n            />\n          ) : null}\n          <Icon type=\"database\" /> 机架：{this.props.rackName || '默认'}\n        </>}\n        // bordered={false}\n        bodyStyle={{ padding: 0 }}\n      >\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\n@observer\nclass VisHost extends React.Component {\n  handleClick = () => {\n    if (this.props.clickable && this.props.onClick) {\n      this.props.onClick(this.props.host);\n    }\n  }\n\n  render() {\n    return (\n      <div className={classNames([\"host-view-vis-host\", { clickable: this.props.clickable }])} key={this.props.host.id} onClick={this.handleClick}>\n        {this.props.checkable ? (\n          <Checkbox\n            onChange={this.props.onCheckChange}\n            checked={this.props.checked}\n            style={{ marginRight: '10px' }}\n          />\n        ) : null}\n        <div className=\"host-view-vis-host-content\">\n          <div><Typography.Text>{ this.props.host.name }</Typography.Text></div>\n          <div><Typography.Text type=\"secondary\">{ this.props.host.username }@{ this.props.host.host }:{ this.props.host.port }</Typography.Text></div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass HostView extends React.Component {\n  updateCheckedHost = (checked) => {\n    if (this.props.onCheckedHostsChange) {\n      this.props.onCheckedHostsChange(checked);\n    }\n  }\n\n  handleHostCheckChange = (id, checked) => {\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      [id]: checked,\n    });\n  };\n\n  handleRackCheckChange = (dcName, rackName, checked) => {\n    const checks = {};\n    _(this.props.hosts).forEach(host => {\n      if (host.dc === dcName && host.rack === rackName) {\n        checks[host.id] = checked;\n      }\n    });\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      ...checks\n    });\n  };\n\n  handleDcCheckChange = (dcName, checked) => {\n    const checks = {};\n    _(this.props.hosts).forEach(host => {\n      if (host.dc === dcName) {\n        checks[host.id] = checked;\n      }\n    });\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      ...checks\n    });\n  };\n\n  render() {\n    const numberOfHosts = Object.keys(this.props.hosts).length;\n\n    if (numberOfHosts === 0) {\n      return (\n        <div style={{ padding: '50px' }}>\n          <Empty description=\"您还没有配置机器\"></Empty>\n        </div>\n      );\n    }\n\n    // Group hosts by DC and Rack\n    const groupByDc = _(this.props.hosts)\n      .groupBy('dc')\n      .toPairs()\n      .map((kv) => {\n        return [kv[0], _(kv[1])\n          .groupBy('rack')\n          .toPairs()\n          .sortBy(0)\n          .value()];\n      })\n      .sortBy(0)\n      .value();\n\n    const allDcs = {};\n    const allRacks = {};\n    const dcCheckStates = {};\n    const rackCheckStates = {};\n\n    if (this.props.checkable) {\n      _.forEach(this.props.hosts, host => {\n        if (!allDcs[host.dc]) {\n          allDcs[host.dc] = [];\n        }\n        allDcs[host.dc].push(host);\n        if (!allRacks[host.dc + '|' + host.rack]) {\n          allRacks[host.dc + '|' + host.rack] = [];\n        }\n        allRacks[host.dc + '|' + host.rack].push(host);\n      });\n\n\n      for (const dc in allDcs) {\n        let hasChecked = false;\n        let hasUnchecked = false;\n        allDcs[dc].forEach(item => {\n          if (this.props.checkedHosts && this.props.checkedHosts[item.id]) {\n            hasChecked = true;\n          } else {\n            hasUnchecked = true;\n          }\n        });\n        if (hasChecked && hasUnchecked) {\n          dcCheckStates[dc] = {\n            check: true,\n            indeterminate: true,\n          };\n        } else if (hasChecked) {\n          dcCheckStates[dc] = {\n            check: true,\n            indeterminate: false,\n          };\n        } else if (hasUnchecked) {\n          dcCheckStates[dc] = {\n            check: false,\n            indeterminate: false,\n          };\n        }\n      }\n\n      for (const rack in allRacks) {\n        let hasChecked = false;\n        let hasUnchecked = false;\n        allRacks[rack].forEach(item => {\n          if (this.props.checkedHosts[item.id]) {\n            hasChecked = true;\n          } else {\n            hasUnchecked = true;\n          }\n        });\n        if (hasChecked && hasUnchecked) {\n          rackCheckStates[rack] = {\n            check: true,\n            indeterminate: true,\n          };\n        } else if (hasChecked) {\n          rackCheckStates[rack] = {\n            check: true,\n            indeterminate: false,\n          };\n        } else if (hasUnchecked) {\n          rackCheckStates[rack] = {\n            check: false,\n            indeterminate: false,\n          };\n        }\n      }\n    }\n\n    return (\n      <>\n        {groupByDc.map((kv) =>\n          <VisDc\n            dcName={kv[0]}\n            key={kv[0]}\n            checkable={this.props.checkable}\n            checked={this.props.checkable && dcCheckStates[kv[0]].check}\n            checkIndeterminate={this.props.checkable && dcCheckStates[kv[0]].indeterminate}\n            onCheckChange={(target) => {\n              this.handleDcCheckChange(kv[0], target.target.checked)\n            }}\n          >\n            {_.chunk(kv[1], 3).map((chunks, idx) =>\n              <Row gutter={16} key={idx}>\n                {chunks.map(item => (\n                  <Col span={8} key={item[0]}>\n                    <VisRack\n                      rackName={item[0]}\n                      key={item[0]}\n                      checkable={this.props.checkable}\n                      checked={this.props.checkable && rackCheckStates[kv[0]+'|'+item[0]].check}\n                      checkIndeterminate={this.props.checkable && rackCheckStates[kv[0]+'|'+item[0]].indeterminate}\n                      onCheckChange={(target) => {\n                        this.handleRackCheckChange(kv[0], item[0], target.target.checked)\n                      }}\n                    >\n                      {item[1].map(host =>\n                        <VisHost\n                          host={host}\n                          key={host.id}\n                          clickable={this.props.clickable}\n                          onClick={this.props.onHostClick}\n                          checkable={this.props.checkable}\n                          checked={this.props.checkable && this.props.checkedHosts[host.id]}\n                          onCheckChange={(target) => {\n                            this.handleHostCheckChange(host.id, target.target.checked)}\n                          }\n                        >{ this.props.hostChildren ? this.props.hostChildren[host.id] : null }</VisHost>\n                      )}\n                    </VisRack>\n                  </Col>\n                ))}\n              </Row>\n            )}\n          </VisDc>\n        )}\n      </>\n    );\n  }\n}\n\nexport default HostView;\n","import _ from 'lodash';\nimport { Modal, Card, Empty, Button, Icon } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\n@inject('layers', 'hosts')\n@observer\nclass DeployHost extends React.Component {\n  state = {\n    hostChecks: {},\n  };\n\n  handleCheckedHostsChange = (hostChecks) => {\n    this.setState({ hostChecks });\n  }\n\n  handleSelectAll = () => {\n    const checks = {};\n    _.forEach(this.props.hosts.hosts, host => checks[host.id] = true);\n    this.setState({ hostChecks: checks });\n  }\n\n  handleDeSelectAll = () => {\n    this.setState({ hostChecks: {} });\n  }\n\n  handleNext = () => {\n    const hostIds = [];\n    for (let id in this.state.hostChecks) {\n      if (this.state.hostChecks[id]) {\n        hostIds.push(id);\n      }\n    }\n    if (hostIds.length === 0) {\n      Modal.error({\n        title: '操作失败',\n        content: '请选择至少一个目标机器用于部署 TiDB 集群',\n      });\n      return;\n    }\n    if (this.props.onNextStep) {\n      this.props.onNextStep(hostIds);\n    }\n  }\n\n  render() {\n    const hasHosts = Object.keys(this.props.hosts.hosts).length > 0;\n    return (\n      <Card\n        bordered={false}\n        title=\"请选择部署 TiDB 集群的目标机器\"\n        bodyStyle={{ padding: 0 }}\n        extra={\n          <Button.Group>\n            <Button onClick={() => this.props.layers.hostListVisible = true}>配置机器</Button>\n            <Button onClick={() => this.props.layers.hostAddVisible = true}>创建机器</Button>\n            <Button onClick={this.handleSelectAll}>全选</Button>\n            <Button onClick={this.handleDeSelectAll}>取消全选</Button>\n          </Button.Group>\n        }\n      >\n        { !hasHosts ? (\n          <Empty description=\"您还没有配置机器\">\n            <Button type=\"primary\" onClick={() => this.props.layers.hostAddVisible = true}>添加机器</Button>\n          </Empty>\n        ) : (\n          <>\n            <HostView\n              hosts={this.props.hosts.hosts}\n              checkable\n              onCheckedHostsChange={this.handleCheckedHostsChange}\n              checkedHosts={this.state.hostChecks}\n            />\n            <div style={{ padding: '16px' }}>\n              <Button type=\"primary\" onClick={this.handleNext}>保存并选择组件 <Icon type=\"right\" /></Button>\n            </div>\n          </>\n        ) }\n      </Card>\n    );\n  }\n}\n\nexport default DeployHost;\n","import { Card, Button, Form, Checkbox, Icon } from 'antd';\nimport React from 'react';\n\nclass DeployComponents extends React.Component {\n  handleNext = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onNextStep) {\n          this.props.onNextStep(values);\n        }\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Card\n        bordered={false}\n        title=\"请选择需要部署的 TiDB 组件\"\n      >\n        <Form layout=\"vertical\">\n        <Form.Item extra=\"PD 组件负责协调事务与调度数据，必选\">\n            <Checkbox disabled checked>PD</Checkbox>\n          </Form.Item>\n          <Form.Item extra=\"TiKV 组件负责存储数据，必选\">\n            <Checkbox disabled checked>TiKV</Checkbox>\n          </Form.Item>\n          <Form.Item extra=\"TiDB 组件提供 SQL 层计算功能，若不勾选则只部署 KV 数据库\">\n            {getFieldDecorator('tidb', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>TiDB</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"收集并存储所有组件及节点的监控，并提供可视化界面展示\">\n            {getFieldDecorator('metrics', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>监控（Prometheus、Node Exporter 及 Grafana）</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"TiSpark 组件可以计算大型分析型 SQL（OLAP）\">\n            {getFieldDecorator('tispark', {\n              valuePropName: 'checked',\n              initialValue: false,\n            })(\n            <Checkbox>TiSpark</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"在组件进程崩溃时基于 Supervise 自动重启组件（注：不会开机自启动）\">\n            {getFieldDecorator('supervise', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>Supervise 进程守护</Checkbox>\n            )}\n          </Form.Item>\n          <Button type=\"primary\" onClick={this.handleNext}>保存并预览部署方案 <Icon type=\"right\" /></Button>\n        </Form>\n      </Card>\n    );\n  }\n}\n\nconst Wrapper = Form.create({ name: 'deploy_components' })(DeployComponents);\n\nexport default Wrapper;\n","import _ from 'lodash';\nimport { Card, Tag, Button, Form, Checkbox, Icon, Typography } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\nconst colors = {\n  pd: 'red',\n  tikv: 'orange',\n  tidb: 'magenta',\n  prometheus: 'cyan',\n  node_exporter: 'blue',\n  grafana: 'purple',\n  tispark: 'gold',\n};\n\nconst componentTags = {\n  pd: <Tag key=\"pd\" color={colors['pd']}>PD</Tag>,\n  tikv: <Tag key=\"tikv\" color={colors['tikv']}>TiKV</Tag>,\n  tidb: <Tag key=\"tidb\" color={colors['tidb']}>TiDB</Tag>,\n  prometheus: <Tag key=\"prometheus\" color={colors['prometheus']}>Prometheus</Tag>,\n  node_exporter: <Tag key=\"node_exporter\" color={colors['node_exporter']}>NodeExporter</Tag>,\n  grafana: <Tag key=\"grafana\" color={colors['grafana']}>Grafana</Tag>,\n  tispark: <Tag key=\"tispark\" color={colors['tispark']}>TiSpark</Tag>,\n};\n\n@inject('hosts')\n@observer\nclass DeployViewTopology extends React.Component {\n  handleNext = () => {\n    if (this.props.onNextStep) {\n      this.props.onNextStep();\n    }\n  }\n\n  render() {\n    if (!this.props.topo) {\n      return null;\n    }\n\n    const filteredHosts = _(this.props.hosts.hosts)\n      .toPairs()\n      .filter((kv) => kv[0] in this.props.topo)\n      .fromPairs()\n      .value();\n\n    const hostChildren = {};\n    for (let id in this.props.topo) {\n      const t = [];\n      for (let c in this.props.topo[id]) {\n        if (this.props.topo[id][c]) {\n          t.push(componentTags[c]);\n        }\n      }\n      hostChildren[id] = t;\n    }\n\n    return (\n      <Card\n        bordered={false}\n        title=\"查看并修改部署方案\"\n        bodyStyle={{ padding: 0 }}\n      >\n        <Card>\n          <div><p>您可以在主机之间拖动组件，从而修改部署方案，或从此区域拖动组件到主机中。</p></div>\n          <div>{Object.values(componentTags)}</div>\n        </Card>\n        <HostView\n          hosts={filteredHosts}\n          hostChildren={hostChildren}\n        />\n        <div style={{ padding: '16px' }}>\n          <Button type=\"primary\" onClick={this.handleNext} loading={this.props.inProgress}>开始部署 <Icon type=\"right\" /></Button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default DeployViewTopology;\n","import _ from 'lodash';\nimport { Layout, PageHeader, Tabs, Modal } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport DeployHosts from './Hosts';\nimport DeployComponents from './Components';\nimport DeployViewTopology from './ViewTopology';\nimport uniqid from 'uniqid';\nimport axios from 'axios';\n\nclass Hider extends React.Component {\n  render() {\n    return (\n      <div style={{ display: this.props.show ? 'block' : 'none' }}>{this.props.children}</div>\n    )\n  }\n}\n\nfunction allocateOnLightestNode(topos, component) {\n  let minValue = Number.MAX_VALUE;\n  let minNodeId = null;\n\n  for (let id in topos) {\n    if (topos[id][component]) {\n      continue;\n    }\n    const components = _.filter(Object.values(topos[id])).length;\n    if (components < minValue) {\n      minValue = components;\n      minNodeId = id;\n    }\n  }\n\n  if (minNodeId) {\n    topos[minNodeId][component] = true;\n  }\n}\n\nfunction organizeComponents(hosts, componentsOriginal) {\n  const components = {...componentsOriginal};\n  delete components.supervise;\n  if (components.metrics) {\n    components.prometheus = true;\n    components.node_exporter = true;\n    components.grafana = true;\n    delete components.metrics;\n  }\n  if (hosts.length === 0) {\n    throw new Error('必须选择至少一个目标机器部署 TiDB 组件');\n  }\n  const topo = {};\n  hosts.forEach(id => topo[id] = {});\n  if (hosts.length === 1) {\n    // 1 machine, put all in one\n    topo[hosts[0]] = components;\n    return topo;\n  }\n\n  if (components.node_exporter) {\n    hosts.forEach(id => topo[id].node_exporter = true);\n    delete components.node_exporter;\n  }\n\n  if (hosts.length === 2) {\n    // 2 machine: Each component (except for the node_exporter) distributes on 1 node.\n    for (let key in components) {\n      if (components[key]) {\n        allocateOnLightestNode(topo, key);\n      }\n    }\n    return topo;\n  }\n  // Otherwise (>= 3):\n  // If tidb, allocate half of the machine for TiDB and half of the machine for TiKV.\n  // If not, allocate all mechines for TiKV.\n  let tikvInstances = Math.max(hosts.length, 3);\n  if (components.tidb) {\n    tikvInstances = Math.max(~~(hosts.length / 2), 3);\n  }\n  for (let i = 0; i < tikvInstances; i++) {\n    allocateOnLightestNode(topo, 'tikv');\n  }\n  components.tikv = false;\n  for (let i = 0; i < 3; i++) {\n    allocateOnLightestNode(topo, 'pd');\n  }\n  components.pd = false;\n  if (components.tidb) {\n    let tidbInstances = ~~(hosts.length / 2);\n    for (let i = 0; i < tidbInstances; i++) {\n      allocateOnLightestNode(topo, 'tidb');\n    }\n    components.tidb = false;\n  }\n  for (let key in components) {\n    if (components[key]) {\n      allocateOnLightestNode(topo, key);\n    }\n  }\n  return topo;\n}\n\n@inject('hosts', 'deployments')\n@observer\n@withRouter\nclass DeployMain extends React.Component {\n  state = {\n    tabKey: 'hosts',\n    hosts: [],\n    topo: null,\n    config: null,\n    inSubmitProgress: false,\n  };\n\n  // state = {\n  //   tabKey: 'components',\n  //   hosts: [this.props.hosts.hosts[Object.keys(this.props.hosts.hosts)[0]].id],\n  //   topo: null,\n  //   inSubmitProgress: false,\n  // };\n\n  handleStartDeploy = () => {\n    const submitData = [];\n    for (let hostId in this.state.topo) {\n      const host = this.props.hosts.hosts[hostId];\n      let c = this.state.topo[hostId];\n      if (c.tidb) {\n        submitData.push({\n          role: 'tidb',\n          server_ip: host.host,\n          server_port: 4000,\n          status_port: 10080,\n          data_dir: `/home/${host.username}/tidb`\n        });\n      }\n      if (c.tikv) {\n        submitData.push({\n          role: 'tikv',\n          server_ip: host.host,\n          server_port: 20160,\n          status_port: 20180,\n          data_dir: `/home/${host.username}/tikv`\n        });\n      }\n      if (c.pd) {\n        submitData.push({\n          pd_id: uniqid(),\n          role: 'pd',\n          server_ip: host.host,\n          server_port: 20160,\n          status_port: 20180,\n          data_dir: `/home/${host.username}/pd`\n        });\n      }\n    }\n\n    const deployInstance = this.props.deployments.addDeployment(this.state.hosts, this.state.config, this.state.topo);\n\n    this.setState({ inSubmitProgress: true });\n\n    axios.post('/submitTask', submitData)\n      .then(response => {\n        if (response.data && response.data.task_id) {\n          try {\n            this.props.deployments.deployments[deployInstance.id].taskId = response.data.task_id;\n          } catch (e) {}\n          this.props.history.push(`/progress/${deployInstance.id}`);\n        } else {\n          this.setState({ inSubmitProgress: false });\n          Modal.error({\n            title: '递交失败',\n            content: '未知服务器响应 ' + JSON.stringify(response.data),\n          });\n        }\n      })\n      .catch(e => {\n        console.log(e);\n        this.setState({ inSubmitProgress: false });\n        Modal.error({\n          title: '递交失败'\n        });\n      });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Content style={{ backgroundColor: '#FFF' }}>\n          <PageHeader\n            title=\"部署\"\n            subTitle=\"部署一个新的 TiDB / TiKV 集群\"\n            footer={\n              <Tabs\n                animated={false}\n                onChange={(tabKey) => this.setState({ tabKey })}\n                activeKey={this.state.tabKey}\n              >\n                <Tabs.TabPane tab=\"1. 目标机器\" key=\"hosts\" />\n                <Tabs.TabPane tab=\"2. 组件\" key=\"components\" disabled={this.state.hosts.length === 0} />\n                <Tabs.TabPane tab=\"3. 部署方案\" key=\"view_topo\" disabled={!this.state.topo} />\n              </Tabs>\n            }\n          />\n        </Layout.Content>\n        <Layout.Content style={{ padding: '20px' }}>\n          <Hider show={this.state.tabKey === 'hosts'}>\n            <DeployHosts onNextStep={ids => {\n              this.setState({ hosts: ids, tabKey: 'components' });\n            }}/>\n          </Hider>\n          <Hider show={this.state.tabKey === 'components'}>\n            <DeployComponents onNextStep={configs => {\n              const topo = organizeComponents(this.state.hosts, {\n                ...configs,\n                pd: true,\n                tikv: true,\n              });\n              this.setState({ config: configs });\n              this.setState({ tabKey: 'view_topo', topo });\n            }}/>\n          </Hider>\n          <Hider show={this.state.tabKey === 'view_topo'}>\n            <DeployViewTopology\n              topo={this.state.topo}\n              onNextStep={this.handleStartDeploy}\n              inProgress={this.state.inSubmitProgress}\n            />\n          </Hider>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n\nexport default DeployMain;\n","import _ from 'lodash';\nimport { Button, Card, Layout, PageHeader, List, Icon, Result } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { NavLink } from 'react-router-dom';\n\nimport io from 'socket.io-client';\n\n@inject('deployments')\n@observer\nclass Progress extends React.Component {\n  state = {\n    tasks: [],\n    finished: false,\n  };\n\n  componentDidMount() {\n    const deployId = this.props.match.params.id;\n    const taskId = this.props.deployments.deployments[deployId].taskId;\n\n    var socket = io();\n    socket.on('connect', () => {\n      socket.emit('deploy', { task_id: taskId });\n    });\n\n    socket.on('sync', (res) => {\n      console.log('sync', res);\n      if (this.state.tasks.length == 0) {\n        this.setState({ tasks: res.task.steps });\n      }\n    });\n\n    socket.on('task', (res) => {\n      console.log('task', res);\n\n      if (res.finish) {\n        this.setState({ finished: true });\n        return;\n      }\n\n      this.state.tasks.forEach((task, idx) => {\n        if (task.step_id == res.step.step_id) {\n          this.state.tasks[idx] = res.step;\n        }\n      });\n      this.setState({ tasks: [...this.state.tasks] });\n    });\n\n    this.socket = socket;\n  }\n\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.removeAllListeners();\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n\n  render() {\n    const deployId = this.props.match.params.id;\n\n    const statusMap = {\n      finished: <Icon type=\"check-circle\" style={{ color: '#37b24d' }} />,\n      unfinished: null,\n      running: <Icon type=\"loading\" spin style={{ color: '#fa5252' }} />,\n    };\n    if (this.state.finished) {\n      return <Result\n        status=\"success\"\n        title=\"集群部署成功！\"\n        extra={[\n          <Button type=\"primary\">\n            <NavLink to={`/manage/${deployId}`}>\n            查看集群详情\n            </NavLink>\n          </Button>\n        ]}\n      />;\n    } else {\n      return (\n        <Layout>\n          <Layout.Content style={{ backgroundColor: '#FFF' }}>\n            <PageHeader\n              title=\"部署进度\"\n              subTitle=\"正在部署集群...\"\n            />\n          </Layout.Content>\n          <Layout.Content style={{ padding: '20px' }}>\n            <Card bordered={false}>\n              <List\n                bordered\n                dataSource={this.state.tasks}\n                renderItem={item => (\n                  <List.Item style={{ display: 'flex', flexDirection: 'row' }}>\n                    <div style={{ width: '60px' }}>\n                      {statusMap[item.status]}\n                    </div>\n                    <div>{item.msg}</div>\n                  </List.Item>\n                )}\n              />\n            </Card>\n          </Layout.Content>\n        </Layout>\n      );\n    }\n  }\n}\n\nexport default Progress;\n","import _ from 'lodash';\nimport { Drawer, Icon, Layout, Button } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\n@inject('layers', 'hosts')\n@observer\nclass LayerHostList extends React.Component {\n  state = {\n    hostChecks: {},\n  };\n\n  handleCheckedHostsChange = (hostChecks) => {\n    this.setState({ hostChecks });\n  };\n\n  handleSelectAll = () => {\n    const checks = {};\n    _.forEach(this.props.hosts.hosts, host => checks[host.id] = true);\n    this.setState({ hostChecks: checks });\n  };\n\n  handleDeSelectAll = () => {\n    this.setState({ hostChecks: {} });\n  };\n\n  handleDeleteAll = () => {\n    for (let id in this.state.hostChecks) {\n      if (this.state.hostChecks[id]) {\n        delete this.props.hosts.hosts[id];\n      }\n    }\n  };\n\n  render() {\n    return (\n      <Drawer\n        closable\n        title={<span><Icon type=\"deployment-unit\" /> 配置机器</span>}\n        placement=\"right\"\n        visible={this.props.layers.hostListVisible}\n        onClose={() => this.props.layers.hostListVisible = false}\n        zIndex={500}\n        width=\"100vw\"\n        drawerStyle={{ background: '#f0f2f5' }}\n        bodyStyle={{ padding: 0 }}\n      >\n        <Layout.Content style={{ background: '#FFF', padding: '16px' }}>\n          <Button type=\"primary\" onClick={() => this.props.layers.hostAddVisible = true} style={{ marginRight: '10px' }}>创建机器</Button>\n          <Button.Group style={{ marginRight: '10px' }}>\n            <Button onClick={this.handleSelectAll}>全选</Button>\n            <Button onClick={this.handleDeSelectAll}>取消全选</Button>\n          </Button.Group>\n          <Button.Group style={{ marginRight: '10px' }}>\n            <Button>批量编辑</Button>\n            <Button onClick={this.handleDeleteAll}>批量删除</Button>\n          </Button.Group>\n        </Layout.Content>\n        <HostView\n          hosts={this.props.hosts.hosts}\n          clickable\n          checkable\n          onHostClick={(item) => console.log(item)}\n          onCheckedHostsChange={this.handleCheckedHostsChange}\n          checkedHosts={this.state.hostChecks}\n        />\n      </Drawer>\n    );\n  }\n}\n\nexport default LayerHostList;\n","import { Drawer, Form, Input, Checkbox, Button, Select, Typography, Collapse } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { toJS } from 'mobx';\n\n@inject('hosts')\n@observer\nclass AddForm extends React.Component {\n  state = {\n    isPubKeyAuth: false,\n    templateValue: undefined,\n  };\n\n  handleChangeAuthMethod = e => {\n    this.setState({\n      isPubKeyAuth: e.target.checked,\n    });\n  };\n\n  handleSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onSubmit) {\n          this.props.onSubmit(values, true);\n        }\n      }\n    });\n  };\n\n  handleSubmitAndNew = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onSubmit) {\n          this.props.onSubmit(values, false);\n          this.handleReset();\n        }\n      }\n    });\n  }\n\n  handleReset = () => {\n    this.props.form.resetFields();\n    this.setState({\n      templateValue: undefined,\n    });\n  };\n\n  handleTemplateChange = (id) => {\n    this.setState({\n      templateValue: id,\n    });\n    let v = toJS(this.props.hosts.hosts[id]);\n    this.props.form.setFieldsValue({\n      ...v,\n      name: '',\n      host: '',\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"vertical\">\n        <Collapse bordered={false} defaultActiveKey={['import', 'basic']}>\n          <Collapse.Panel header=\"导入模板\" key=\"import\">\n            <Form.Item label=\"从现有主机配置复制\">\n              <Select\n                showSearch\n                placeholder=\"选择主机\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) => {\n                  const v = option.props.label.toLowerCase() + '|' + option.props.value.username + '@' + option.props.value.host + ':' + option.props.value.port;\n                  return v.indexOf(input.toLowerCase()) >= 0;\n                }}\n                optionLabelProp=\"label\"\n                onChange={this.handleTemplateChange}\n                value={this.state.templateValue}\n              >\n                {Object.values(this.props.hosts.hosts).map(v => {\n                  return (\n                    <Select.Option value={v.id} label={v.name} key={v.id}>\n                      <div>{v.name}</div>\n                      <div><Typography.Text type=\"secondary\">{v.username}@{v.host}:{v.port}</Typography.Text></div>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          </Collapse.Panel>\n          <Collapse.Panel header=\"详细配置\" key=\"basic\">\n            <Form.Item label=\"唯一名称\">\n              {getFieldDecorator('name')(\n                <Input placeholder=\"留空自动生成\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"地址\">\n              {getFieldDecorator('host', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入主机地址',\n                  },\n                ],\n              })(\n                <Input placeholder=\"主机地址，IP 或域名\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"端口\">\n              {getFieldDecorator('port', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入端口',\n                  },\n                ],\n                initialValue: '22',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item label=\"登录用户名\">\n              {getFieldDecorator('username', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入登录用户名',\n                  },\n                ],\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('isPubKeyAuth', {\n                initialValue: false,\n              })(\n                <Checkbox checked={this.state.isPubKeyAuth} onChange={this.handleChangeAuthMethod}>使用私钥登录</Checkbox>\n              )}\n            </Form.Item>\n            {this.state.isPubKeyAuth ? (\n              <>\n                <Form.Item label=\"私钥\">\n                  {getFieldDecorator('privateKey', {\n                    rules: [\n                      {\n                        required: true,\n                        message: '请输入私钥',\n                      },\n                    ],\n                  })(\n                    <Input.TextArea />\n                  )}\n                </Form.Item>\n                <Form.Item label=\"私钥密码\">\n                  {getFieldDecorator('privateKeyPassword')(\n                    <Input.Password />\n                  )}\n                </Form.Item>\n              </>\n            ) : (\n              <Form.Item label=\"密码\">\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入登录密码',\n                    },\n                  ],\n                })(\n                  <Input.Password />\n                )}\n              </Form.Item>\n            )}\n          </Collapse.Panel>\n          <Collapse.Panel header=\"高级配置\" key=\"advanced\">\n            <Form.Item label=\"位置标签: DC\">\n              {getFieldDecorator('dc', {\n                initialValue: '',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item label=\"位置标签: Rack\">\n              {getFieldDecorator('rack', {\n                initialValue: '',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n          </Collapse.Panel>\n        </Collapse>\n        <div style={{ margin: '16px' }}>\n          <Button type=\"primary\" onClick={this.handleSubmit}>添加</Button>&nbsp;\n          <Button onClick={this.handleSubmitAndNew}>保存并添加下一个</Button>&nbsp;\n          <Button onClick={this.handleReset}>重置</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst AddFormWrapper = Form.create({ name: 'add_form' })(AddForm);\n\n@inject('layers', 'hosts')\n@observer\nclass LayerHostAdd extends React.Component {\n  handleSubmit = (values, hide) => {\n    if (this.props.hosts.addHost(values)) {\n      if (hide) {\n        this.props.layers.hostAddVisible = false;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Drawer\n        closable\n        destroyOnClose\n        title=\"添加 SSH 远程主机\"\n        placement=\"right\"\n        visible={this.props.layers.hostAddVisible}\n        onClose={() => this.props.layers.hostAddVisible = false}\n        zIndex={501}\n        width={400}\n        bodyStyle={{ padding: 0 }}\n      >\n        <AddFormWrapper onSubmit={this.handleSubmit} />\n      </Drawer>\n    );\n  }\n}\n\n\nexport default LayerHostAdd;\n","import _ from 'lodash';\nimport { Layout, Menu, Icon, Card, Tag } from 'antd';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { observer, inject } from 'mobx-react';\nimport { toJS } from 'mobx';\nimport HostView from './components/HostView';\n\nconst colors = {\n  pd: 'red',\n  tikv: 'orange',\n  tidb: 'magenta',\n  prometheus: 'cyan',\n  node_exporter: 'blue',\n  grafana: 'purple',\n  tispark: 'gold',\n};\n\nconst componentTags = {\n  pd: <Tag key=\"pd\" color={colors['pd']}>PD</Tag>,\n  tikv: <Tag key=\"tikv\" color={colors['tikv']}>TiKV</Tag>,\n  tidb: <Tag key=\"tidb\" color={colors['tidb']}>TiDB</Tag>,\n  prometheus: <Tag key=\"prometheus\" color={colors['prometheus']}>Prometheus</Tag>,\n  node_exporter: <Tag key=\"node_exporter\" color={colors['node_exporter']}>NodeExporter</Tag>,\n  grafana: <Tag key=\"grafana\" color={colors['grafana']}>Grafana</Tag>,\n  tispark: <Tag key=\"tispark\" color={colors['tispark']}>TiSpark</Tag>,\n};\n\n\n@inject('deployments', 'hosts')\n@observer\nclass ManageCluster extends React.Component {\n  state = {\n    activeDeployId: null,\n  }\n\n  componentDidMount() {\n    const deployId = this.props.match.params.id;\n    if (deployId) {\n      this.setState({ activeDeployId: deployId });\n    }\n  }\n\n  handleClick = (e) => {\n    this.setState({ activeDeployId: e.key });\n  }\n\n  renderChild(deployId) {\n    const deploy = this.props.deployments.deployments[deployId];\n    console.log(toJS(deploy));\n    const filteredHosts = _(this.props.hosts.hosts)\n      .toPairs()\n      .filter((kv) => kv[0] in deploy.topology)\n      .fromPairs()\n      .value();\n\n    const hostChildren = {};\n    for (let id in deploy.topology) {\n      const t = [];\n      for (let c in deploy.topology[id]) {\n        if (deploy.topology[id][c]) {\n          t.push(componentTags[c]);\n        }\n      }\n      hostChildren[id] = t;\n    }\n\n    return (\n      <Card\n        bordered={false}\n        title=\"集群拓扑\"\n        bodyStyle={{ padding: 0 }}\n      >\n        <HostView\n          hosts={filteredHosts}\n          hostChildren={hostChildren}\n        />\n      </Card>\n    );\n  }\n\n  render() {\n    let content = null;\n    if (this.state.activeDeployId) {\n      content = this.renderChild(this.state.activeDeployId);\n    }\n\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Layout.Sider theme=\"light\">\n          <Menu\n            onClick={this.handleClick}\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            mode=\"inline\"\n          >\n            { _.map(this.props.deployments.deployments, d => {\n              return (\n                <Menu.Item key={d.id}>\n                  <NavLink to={`/manage/${d.id}`}>\n                      {d.id}\n                  </NavLink>\n                </Menu.Item>\n              );\n            })}\n          </Menu>\n        </Layout.Sider>\n        <Layout.Content style={{ padding: '20px' }}>\n          {content}\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n\nexport default ManageCluster;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Sidemenu from './Sidemenu';\nimport { Layout } from 'antd';\nimport './App.css';\n\nimport Home from './Home';\nimport DeployMain from './deploy/Main';\nimport Progress from './Progress';\nimport LayerHostList from './layers/HostList';\nimport LayerHostAdd from './layers/HostAdd';\nimport ManageCluster from './ManageCluster';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sidemenu />\n        <Layout.Content>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/deploy\">\n              <DeployMain />\n            </Route>\n            <Route path=\"/manage\" component={ManageCluster} />\n            <Route path=\"/manage/:id\" component={ManageCluster} />\n            <Route path=\"/progress/:id\" component={Progress} />\n          </Switch>\n        </Layout.Content>\n        <LayerHostList />\n        <LayerHostAdd />\n      </Layout>\n    );\n  }\n}\n","import { observable } from 'mobx';\n\nclass Store {\n  @observable hostListVisible = false;\n  @observable hostAddVisible = false;\n}\n\nconst store = new Store();\n\nexport default store;\n","import { Modal } from 'antd';\nimport { observable, action } from 'mobx';\nimport uniqid from 'uniqid';\n\nclass Store {\n  @observable hosts = {};\n\n  constructor() {\n    this.addHost({\n      name: 'uhost-ap3kilnh',\n      host: '10.9.164.80',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-1',\n    });\n    this.addHost({\n      name: 'uhost-kesclakw',\n      host: '10.9.136.246',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-1',\n    });\n    this.addHost({\n      name: 'uhost-ou3hu5yx',\n      host: '10.9.158.146',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-2',\n    });\n    this.addHost({\n      name: 'uhost-x2ofoajg',\n      host: '10.9.111.178',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-2',\n    });\n    this.addHost({\n      name: 'uhost-ahdkyu5j',\n      host: '10.9.106.240',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-1',\n    });\n    this.addHost({\n      name: 'uhost-keoznqgf',\n      host: '10.9.13.204',\n      username: 'tidb',\n      password: 'VQh?dv>c$55c',\n      port: 22,\n      dc: 'ucloud',\n      rack: 'rack-2',\n    });\n    this.addHost({\n      host: '192.168.233.128',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n    this.addHost({\n      host: '192.168.233.129',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n    this.addHost({\n      host: '192.168.233.130',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n    this.addHost({\n      host: '192.168.233.131',\n      username: 'tidb',\n      password: '123456',\n      port: 22,\n      dc: 'Tongji',\n    });\n  }\n\n  @action.bound\n  addHost(opts) {\n    if (!opts.name) {\n      opts.name = `${opts.username}@${opts.host}:${opts.port}`;\n    }\n    opts.port = parseInt(opts.port);\n    if (!opts.port) {\n      Modal.error({\n        title: '添加失败',\n        content: `无效端口`,\n      });\n      return false;\n    }\n    if (Object.values(this.hosts).map(v => v.host).indexOf(opts.host) !== -1) {\n      Modal.error({\n        title: '添加失败',\n        content: `主机 ${opts.host} 已存在，不能重复添加`,\n      });\n      return false;\n    }\n    // TODO: 检查 name 格式\n    if (Object.values(this.hosts).map(v => v.name).indexOf(opts.name) !== -1) {\n      Modal.error({\n        title: '添加失败',\n        content: `唯一名称 ${opts.name} 已存在，不能重复添加`,\n      });\n      return false;\n    }\n    opts.id = uniqid();\n    opts.dc = opts.dc || '';\n    opts.rack = opts.rack || '';\n    this.hosts[opts.id] = opts;\n    return true;\n  }\n}\n\nconst store = new Store();\n\nexport default store;\n","import { observable, action, toJS } from 'mobx';\nimport uniqid from 'uniqid';\n\nclass Store {\n  @observable deployments = {};\n\n  @action.bound\n  addDeployment(hosts, config, topology) {\n    const d = {\n      id: uniqid(),\n      hosts: JSON.parse(JSON.stringify(hosts)),\n      config: JSON.parse(JSON.stringify(config)),\n      topology: JSON.parse(JSON.stringify(topology)),\n    };\n    this.deployments[d.id] = d;\n    console.log(d);\n    return d;\n  }\n}\n\nconst store = new Store();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport storeLayers from './store/layers';\nimport storeHosts from './store/hosts';\nimport storeDeployments from './store/deployments';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider\n      hosts={storeHosts}\n      deployments={storeDeployments}\n      layers={storeLayers}\n    >\n      <App />\n    </Provider>\n  </BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}