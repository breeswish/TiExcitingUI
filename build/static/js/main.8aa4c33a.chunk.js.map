{"version":3,"sources":["Sidemenu.js","Home.js","components/HostView.js","deploy/Hosts.js","deploy/Components.js","deploy/ViewTopology.js","deploy/Main.js","Progress.js","layers/HostList.js","layers/HostAdd.js","App.js","store/layers.js","store/hosts.js","store/deployments.js","index.js"],"names":["Sider","SideMenu","inject","observer","state","collapsed","onCollapse","setState","this","props","location","layers","className","theme","mode","defaultSelectedKeys","selectedKeys","pathname","Item","key","to","type","selectable","onClick","item","hostListVisible","SubMenu","title","React","Component","withRouter","Home","VisDc","checkable","onChange","onCheckChange","indeterminate","checkIndeterminate","checked","style","marginRight","dcName","children","VisRack","rackName","bodyStyle","padding","VisHost","handleClick","clickable","host","classNames","id","Text","name","disabled","username","port","HostView","updateCheckedHost","onCheckedHostsChange","handleHostCheckChange","checkedHosts","handleRackCheckChange","checks","_","hosts","forEach","dc","rack","handleDcCheckChange","Object","keys","length","description","groupByDc","groupBy","toPairs","map","kv","sortBy","value","allDcs","allRacks","dcCheckStates","rackCheckStates","push","hasChecked","hasUnchecked","check","target","chunk","chunks","idx","gutter","span","onHostClick","hostChildren","DeployHost","hostChecks","handleCheckedHostsChange","handleSelectAll","handleDeSelectAll","handleNext","hostIds","onNextStep","error","content","hasHosts","bordered","extra","Group","hostAddVisible","DeployComponents","form","validateFields","err","values","getFieldDecorator","layout","valuePropName","initialValue","Wrapper","create","colors","componentTags","pd","color","tikv","tidb","prometheus","node_exporter","grafana","tispark","DeployViewTopology","topo","filteredHosts","filter","fromPairs","t","c","loading","inProgress","Hider","display","show","allocateOnLightestNode","topos","component","minValue","Number","MAX_VALUE","minNodeId","components","DeployMain","tabKey","inSubmitProgress","handleStartDeploy","submitData","hostId","role","server_ip","server_port","status_port","data_dir","pd_id","uniqid","axios","post","then","response","console","log","Content","backgroundColor","subTitle","footer","animated","activeKey","TabPane","tab","ids","configs","componentsOriginal","supervise","metrics","Error","tikvInstances","Math","max","i","tidbInstances","organizeComponents","Progress","tasks","match","params","socket","io","on","emit","task_id","res","steps","task","step_id","removeAllListeners","close","statusMap","finished","spin","unfinished","running","dataSource","renderItem","flexDirection","width","status","msg","LayerHostList","closable","placement","visible","onClose","zIndex","drawerStyle","background","AddForm","isPubKeyAuth","templateValue","undefined","handleChangeAuthMethod","e","handleSubmit","onSubmit","handleSubmitAndNew","handleReset","resetFields","handleTemplateChange","v","toJS","setFieldsValue","defaultActiveKey","Panel","header","label","showSearch","placeholder","optionFilterProp","filterOption","input","option","toLowerCase","indexOf","optionLabelProp","Option","rules","required","message","TextArea","Password","margin","AddFormWrapper","LayerHostAdd","hide","addHost","destroyOnClose","App","minHeight","Sidemenu","exact","path","store","observable","action","bound","password","opts","parseInt","config","topology","d","JSON","parse","stringify","deployments","ReactDOM","render","storeHosts","storeDeployments","storeLayers","document","getElementById"],"mappings":"sZAKQA,E,IAAAA,MAIFC,EAFLC,YAAO,S,GACPC,Y,6MAECC,MAAQ,CACNC,WAAW,G,EAGbC,WAAa,SAAAD,GACX,EAAKE,SAAS,CAAEF,e,wEAGR,IAAD,EACsBG,KAAKC,MAA1BC,EADD,EACCA,SAAUC,EADX,EACWA,OAElB,OACE,kBAACX,EAAD,KAEE,yBAAKY,UAAU,SACf,uBAAMC,MAAM,OAAOC,KAAK,WAAWC,oBAAqB,CAAC,KAAMC,aAAc,CAACN,EAASO,WACrF,sBAAMC,KAAN,CAAWC,IAAI,WACb,kBAAC,IAAD,CAASC,GAAG,WACV,uBAAMC,KAAK,aADb,iBAKF,sBAAMH,KAAN,CAAWC,IAAI,kBACb,kBAAC,IAAD,CAASC,GAAG,kBACV,uBAAMC,KAAK,cADb,8BAMJ,uBAAMR,MAAM,OAAOC,KAAK,WAAWQ,YAAY,EAAOC,QAAS,SAACC,GAC7C,UAAbA,EAAKL,MACPR,EAAOc,iBAAkB,KAG3B,sBAAMP,KAAN,CAAWC,IAAI,SACb,uBAAME,KAAK,oBADb,4BAIA,sBAAMH,KAAN,CAAWC,IAAI,YACb,uBAAME,KAAK,YADb,gBAIA,sBAAMK,QAAN,CACEP,IAAI,WACJQ,MACE,8BACE,uBAAMN,KAAK,WADb,iBAKF,sBAAMH,KAAN,CAAWC,IAAI,MAAf,4BAGA,sBAAMD,KAAN,CAAWC,IAAI,MAAf,uB,GAtDWS,IAAMC,a,MAgEdC,cAAW7B,GCtEL8B,G,wLAEjB,OACE,mD,GAH4BH,IAAMC,Y,6xBCKlCG,EADL7B,Y,mLAGG,OACE,yBAAKS,UAAU,oBACb,yBAAKA,UAAU,0BACZJ,KAAKC,MAAMwB,UACV,uBACEC,SAAU1B,KAAKC,MAAM0B,cACrBC,cAAe5B,KAAKC,MAAM4B,mBAC1BC,QAAS9B,KAAKC,MAAM6B,QACpBC,MAAO,CAAEC,YAAa,UAEtB,KACJ,uBAAMnB,KAAK,UATb,sBAS4Bb,KAAKC,MAAMgC,QAAU,gBAEjD,yBAAK7B,UAAU,4BACZJ,KAAKC,MAAMiC,e,GAhBFd,IAAMC,a,EAwBpBc,EADLxC,Y,mLAGG,OACE,uBACEwB,MAAO,oCACJnB,KAAKC,MAAMwB,UACV,uBACEC,SAAU1B,KAAKC,MAAM0B,cACrBC,cAAe5B,KAAKC,MAAM4B,mBAC1BC,QAAS9B,KAAKC,MAAM6B,QACpBC,MAAO,CAAEC,YAAa,UAEtB,KACJ,uBAAMnB,KAAK,aATN,sBASwBb,KAAKC,MAAMmC,UAAY,gBAGtDC,UAAW,CAAEC,QAAS,IAErBtC,KAAKC,MAAMiC,c,GAlBEd,IAAMC,a,EAyBtBkB,EADL5C,Y,6MAEC6C,YAAc,WACR,EAAKvC,MAAMwC,WAAa,EAAKxC,MAAMc,SACrC,EAAKd,MAAMc,QAAQ,EAAKd,MAAMyC,O,wEAKhC,OACE,yBAAKtC,UAAWuC,IAAW,CAAC,qBAAsB,CAAEF,UAAWzC,KAAKC,MAAMwC,aAAe9B,IAAKX,KAAKC,MAAMyC,KAAKE,GAAI7B,QAASf,KAAKwC,aAC7HxC,KAAKC,MAAMwB,UACV,uBACEC,SAAU1B,KAAKC,MAAM0B,cACrBG,QAAS9B,KAAKC,MAAM6B,QACpBC,MAAO,CAAEC,YAAa,UAEtB,KACJ,yBAAK5B,UAAU,8BACb,6BAAK,sBAAYyC,KAAZ,KAAmB7C,KAAKC,MAAMyC,KAAKI,OACxC,6BAAK,sBAAYD,KAAZ,CAAiBE,UAAQ,GAAG/C,KAAKC,MAAMyC,KAAKM,SAA5C,IAAyDhD,KAAKC,MAAMyC,KAAKA,KAAzE,IAAkF1C,KAAKC,MAAMyC,KAAKO,OACtGjD,KAAKC,MAAMiC,e,GApBAd,IAAMC,a,EA4Nb6B,EAjMdvD,Y,6MAECwD,kBAAoB,SAACrB,GACf,EAAK7B,MAAMmD,sBACb,EAAKnD,MAAMmD,qBAAqBtB,I,EAIpCuB,sBAAwB,SAACT,EAAId,GAC3B,EAAKqB,kBAAL,KACK,EAAKlD,MAAMqD,aADhB,eAEGV,EAAKd,M,EAIVyB,sBAAwB,SAACtB,EAAQG,EAAUN,GACzC,IAAM0B,EAAS,GACfC,IAAE,EAAKxD,MAAMyD,OAAOC,SAAQ,SAAAjB,GACtBA,EAAKkB,KAAO3B,GAAUS,EAAKmB,OAASzB,IACtCoB,EAAOd,EAAKE,IAAMd,MAGtB,EAAKqB,kBAAL,KACK,EAAKlD,MAAMqD,aADhB,GAEKE,K,EAIPM,oBAAsB,SAAC7B,EAAQH,GAC7B,IAAM0B,EAAS,GACfC,IAAE,EAAKxD,MAAMyD,OAAOC,SAAQ,SAAAjB,GACtBA,EAAKkB,KAAO3B,IACduB,EAAOd,EAAKE,IAAMd,MAGtB,EAAKqB,kBAAL,KACK,EAAKlD,MAAMqD,aADhB,GAEKE,K,wEAIG,IAAD,OAGP,GAAsB,IAFAO,OAAOC,KAAKhE,KAAKC,MAAMyD,OAAOO,OAGlD,OACE,yBAAKlC,MAAO,CAAEO,QAAS,SACrB,uBAAO4B,YAAY,sDAMzB,IAAMC,EAAYV,IAAEzD,KAAKC,MAAMyD,OAC5BU,QAAQ,MACRC,UACAC,KAAI,SAACC,GACJ,MAAO,CAACA,EAAG,GAAId,IAAEc,EAAG,IACjBH,QAAQ,QACRC,UACAG,OAAO,GACPC,YAEJD,OAAO,GACPC,QAEGC,EAAS,GACTC,EAAW,GACXC,EAAgB,GAChBC,EAAkB,GAExB,GAAI7E,KAAKC,MAAMwB,UAAW,CAaxB,IAAK,IAAMmC,KAZXH,IAAEE,QAAQ3D,KAAKC,MAAMyD,OAAO,SAAAhB,GACrBgC,EAAOhC,EAAKkB,MACfc,EAAOhC,EAAKkB,IAAM,IAEpBc,EAAOhC,EAAKkB,IAAIkB,KAAKpC,GAChBiC,EAASjC,EAAKkB,GAAK,IAAMlB,EAAKmB,QACjCc,EAASjC,EAAKkB,GAAK,IAAMlB,EAAKmB,MAAQ,IAExCc,EAASjC,EAAKkB,GAAK,IAAMlB,EAAKmB,MAAMiB,KAAKpC,MAI1BgC,EAAQ,CACvB,IAAIK,GAAa,EACbC,GAAe,EACnBN,EAAOd,GAAID,SAAQ,SAAA3C,GACb,EAAKf,MAAMqD,cAAgB,EAAKrD,MAAMqD,aAAatC,EAAK4B,IAC1DmC,GAAa,EAEbC,GAAe,KAGfD,GAAcC,EAChBJ,EAAchB,GAAM,CAClBqB,OAAO,EACPrD,eAAe,GAERmD,EACTH,EAAchB,GAAM,CAClBqB,OAAO,EACPrD,eAAe,GAERoD,IACTJ,EAAchB,GAAM,CAClBqB,OAAO,EACPrD,eAAe,IAKrB,IAAK,IAAMiC,KAAQc,EAAU,CAC3B,IAAII,GAAa,EACbC,GAAe,EACnBL,EAASd,GAAMF,SAAQ,SAAA3C,GACjB,EAAKf,MAAMqD,aAAatC,EAAK4B,IAC/BmC,GAAa,EAEbC,GAAe,KAGfD,GAAcC,EAChBH,EAAgBhB,GAAQ,CACtBoB,OAAO,EACPrD,eAAe,GAERmD,EACTF,EAAgBhB,GAAQ,CACtBoB,OAAO,EACPrD,eAAe,GAERoD,IACTH,EAAgBhB,GAAQ,CACtBoB,OAAO,EACPrD,eAAe,KAMvB,OACE,oCACGuC,EAAUG,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CACEtC,OAAQsC,EAAG,GACX5D,IAAK4D,EAAG,GACR9C,UAAW,EAAKxB,MAAMwB,UACtBK,QAAS,EAAK7B,MAAMwB,WAAamD,EAAcL,EAAG,IAAIU,MACtDpD,mBAAoB,EAAK5B,MAAMwB,WAAamD,EAAcL,EAAG,IAAI3C,cACjED,cAAe,SAACuD,GACd,EAAKpB,oBAAoBS,EAAG,GAAIW,EAAOA,OAAOpD,WAG/C2B,IAAE0B,MAAMZ,EAAG,GAAI,GAAGD,KAAI,SAACc,EAAQC,GAAT,OACrB,uBAAKC,OAAQ,GAAI3E,IAAK0E,GACnBD,EAAOd,KAAI,SAAAtD,GAAI,OACd,uBAAKuE,KAAM,EAAG5E,IAAKK,EAAK,IACtB,kBAAC,EAAD,CACEoB,SAAUpB,EAAK,GACfL,IAAKK,EAAK,GACVS,UAAW,EAAKxB,MAAMwB,UACtBK,QAAS,EAAK7B,MAAMwB,WAAaoD,EAAgBN,EAAG,GAAG,IAAIvD,EAAK,IAAIiE,MACpEpD,mBAAoB,EAAK5B,MAAMwB,WAAaoD,EAAgBN,EAAG,GAAG,IAAIvD,EAAK,IAAIY,cAC/ED,cAAe,SAACuD,GACd,EAAK3B,sBAAsBgB,EAAG,GAAIvD,EAAK,GAAIkE,EAAOA,OAAOpD,WAG1Dd,EAAK,GAAGsD,KAAI,SAAA5B,GAAI,OACf,kBAAC,EAAD,CACEA,KAAMA,EACN/B,IAAK+B,EAAKE,GACVH,UAAW,EAAKxC,MAAMwC,UACtB1B,QAAS,EAAKd,MAAMuF,YACpB/D,UAAW,EAAKxB,MAAMwB,UACtBK,QAAS,EAAK7B,MAAMwB,WAAa,EAAKxB,MAAMqD,aAAaZ,EAAKE,IAC9DjB,cAAe,SAACuD,GACd,EAAK7B,sBAAsBX,EAAKE,GAAIsC,EAAOA,OAAOpD,WAEnD,EAAK7B,MAAMwF,aAAe,EAAKxF,MAAMwF,aAAa/C,EAAKE,IAAM,2B,GAlLjExB,IAAMC,a,ECDdqE,EA9EdhG,YAAO,SAAU,Q,GACjBC,Y,6MAECC,MAAQ,CACN+F,WAAY,I,EAGdC,yBAA2B,SAACD,GAC1B,EAAK5F,SAAS,CAAE4F,gB,EAGlBE,gBAAkB,WAChB,IAAMrC,EAAS,GACfC,IAAEE,QAAQ,EAAK1D,MAAMyD,MAAMA,OAAO,SAAAhB,GAAI,OAAIc,EAAOd,EAAKE,KAAM,KAC5D,EAAK7C,SAAS,CAAE4F,WAAYnC,K,EAG9BsC,kBAAoB,WAClB,EAAK/F,SAAS,CAAE4F,WAAY,M,EAG9BI,WAAa,WACX,IAAMC,EAAU,GAChB,IAAK,IAAIpD,KAAM,EAAKhD,MAAM+F,WACpB,EAAK/F,MAAM+F,WAAW/C,IACxBoD,EAAQlB,KAAKlC,GAGM,IAAnBoD,EAAQ/B,OAOR,EAAKhE,MAAMgG,YACb,EAAKhG,MAAMgG,WAAWD,GAPtB,IAAME,MAAM,CACV/E,MAAO,2BACPgF,QAAS,kH,wEASL,IAAD,OACDC,EAAWrC,OAAOC,KAAKhE,KAAKC,MAAMyD,MAAMA,OAAOO,OAAS,EAC9D,OACE,uBACEoC,UAAU,EACVlF,MAAM,iFACNkB,UAAW,CAAEC,QAAS,GACtBgE,MACE,sBAAQC,MAAR,KACE,uBAAQxF,QAAS,kBAAM,EAAKd,MAAME,OAAOc,iBAAkB,IAA3D,4BACA,uBAAQF,QAAS,kBAAM,EAAKd,MAAME,OAAOqG,gBAAiB,IAA1D,4BACA,uBAAQzF,QAASf,KAAK6F,iBAAtB,gBACA,uBAAQ9E,QAASf,KAAK8F,mBAAtB,8BAIDM,EAKD,oCACE,kBAAC,EAAD,CACE1C,MAAO1D,KAAKC,MAAMyD,MAAMA,MACxBjC,WAAS,EACT2B,qBAAsBpD,KAAK4F,yBAC3BtC,aAActD,KAAKJ,MAAM+F,aAE3B,yBAAK5D,MAAO,CAAEO,QAAS,SACrB,uBAAQzB,KAAK,UAAUE,QAASf,KAAK+F,YAArC,8CAAyD,uBAAMlF,KAAK,aAZxE,uBAAOqD,YAAY,oDACjB,uBAAQrD,KAAK,UAAUE,QAAS,kBAAM,EAAKd,MAAME,OAAOqG,gBAAiB,IAAzE,kC,GAxDapF,IAAMC,a,uBCLzBoF,E,2MACJV,WAAa,WACX,EAAK9F,MAAMyG,KAAKC,gBAAe,SAACC,EAAKC,GAC9BD,GACC,EAAK3G,MAAMgG,YACb,EAAKhG,MAAMgG,WAAWY,O,wEAMpB,IACAC,EAAsB9G,KAAKC,MAAMyG,KAAjCI,kBAER,OACE,uBACET,UAAU,EACVlF,MAAM,sEAEN,uBAAM4F,OAAO,YACb,sBAAMrG,KAAN,CAAW4F,MAAM,uGACb,uBAAUvD,UAAQ,EAACjB,SAAO,GAA1B,OAEF,sBAAMpB,KAAN,CAAW4F,MAAM,2EACf,uBAAUvD,UAAQ,EAACjB,SAAO,GAA1B,SAEF,sBAAMpB,KAAN,CAAW4F,MAAM,gJACdQ,EAAkB,OAAQ,CACzBE,cAAe,UACfC,cAAc,GAFfH,CAID,qCAGF,sBAAMpG,KAAN,CAAW4F,MAAM,gKACdQ,EAAkB,UAAW,CAC5BE,cAAe,UACfC,cAAc,GAFfH,CAID,qGAGF,sBAAMpG,KAAN,CAAW4F,MAAM,kGACdQ,EAAkB,UAAW,CAC5BE,cAAe,UACfC,cAAc,GAFfH,CAID,wCAGF,sBAAMpG,KAAN,CAAW4F,MAAM,iLACdQ,EAAkB,YAAa,CAC9BE,cAAe,UACfC,cAAc,GAFfH,CAID,mEAGF,uBAAQjG,KAAK,UAAUE,QAASf,KAAK+F,YAArC,0DAA2D,uBAAMlF,KAAK,iB,GA1DjDO,IAAMC,WAmEtB6F,GAFC,IAAKC,OAAO,CAAErE,KAAM,qBAApB,CAA2C2D,G,kBC9DrDW,GACA,MADAA,GAEE,SAFFA,GAGE,UAHFA,GAIQ,OAJRA,GAKW,OALXA,GAMK,SANLA,GAOK,OAGLC,GAAgB,CACpBC,GAAI,wBAAK3G,IAAI,KAAK4G,MAAOH,IAArB,MACJI,KAAM,wBAAK7G,IAAI,OAAO4G,MAAOH,IAAvB,QACNK,KAAM,wBAAK9G,IAAI,OAAO4G,MAAOH,IAAvB,QACNM,WAAY,wBAAK/G,IAAI,aAAa4G,MAAOH,IAA7B,cACZO,cAAe,wBAAKhH,IAAI,gBAAgB4G,MAAOH,IAAhC,gBACfQ,QAAS,wBAAKjH,IAAI,UAAU4G,MAAOH,IAA1B,WACTS,QAAS,wBAAKlH,IAAI,UAAU4G,MAAOH,IAA1B,YAwDIU,GArDdpI,YAAO,Q,GACPC,Y,6MAECoG,WAAa,WACP,EAAK9F,MAAMgG,YACb,EAAKhG,MAAMgG,c,wEAIL,IAAD,OACP,IAAKjG,KAAKC,MAAM8H,KACd,OAAO,KAGT,IAAMC,EAAgBvE,IAAEzD,KAAKC,MAAMyD,MAAMA,OACtCW,UACA4D,QAAO,SAAC1D,GAAD,OAAQA,EAAG,KAAM,EAAKtE,MAAM8H,QACnCG,YACAzD,QAEGgB,EAAe,GACrB,IAAK,IAAI7C,KAAM5C,KAAKC,MAAM8H,KAAM,CAC9B,IAAMI,EAAI,GACV,IAAK,IAAIC,KAAKpI,KAAKC,MAAM8H,KAAKnF,GACxB5C,KAAKC,MAAM8H,KAAKnF,GAAIwF,IACtBD,EAAErD,KAAKuC,GAAce,IAGzB3C,EAAa7C,GAAMuF,EAGrB,OACE,uBACE9B,UAAU,EACVlF,MAAM,yDACNkB,UAAW,CAAEC,QAAS,IAEtB,2BACE,6BAAK,wPACL,6BAAMyB,OAAO8C,OAAOQ,MAEtB,kBAAC,EAAD,CACE3D,MAAOsE,EACPvC,aAAcA,IAEhB,yBAAK1D,MAAO,CAAEO,QAAS,SACrB,uBAAQzB,KAAK,UAAUE,QAASf,KAAK+F,WAAYsC,QAASrI,KAAKC,MAAMqI,YAArE,4BAAsF,uBAAMzH,KAAK,iB,GA5C1EO,IAAMC,a,gnBCjBjCkH,G,iLAEF,OACE,yBAAKxG,MAAO,CAAEyG,QAASxI,KAAKC,MAAMwI,KAAO,QAAU,SAAWzI,KAAKC,MAAMiC,c,GAH3Dd,IAAMC,WAQ1B,SAASqH,GAAuBC,EAAOC,GACrC,IAAIC,EAAWC,OAAOC,UAClBC,EAAY,KAEhB,IAAK,IAAIpG,KAAM+F,EACb,IAAIA,EAAM/F,GAAIgG,GAAd,CAGA,IAAMK,EAAaxF,IAAEwE,OAAOlE,OAAO8C,OAAO8B,EAAM/F,KAAMqB,OAClDgF,EAAaJ,IACfA,EAAWI,EACXD,EAAYpG,GAIZoG,IACFL,EAAMK,GAAWJ,IAAa,G,aAmLnBM,GA/GdxJ,YAAO,Q,GACPC,Y,EACA2B,Y,6MAEC1B,MAAQ,CACNuJ,OAAQ,QACRzF,MAAO,GACPqE,KAAM,KACNqB,kBAAkB,G,EAUpBC,kBAAoB,WAClB,IAAMC,EAAa,GACnB,IAAK,IAAIC,KAAU,EAAK3J,MAAMmI,KAAM,CAClC,IAAMrF,EAAO,EAAKzC,MAAMyD,MAAMA,MAAM6F,GAChCnB,EAAI,EAAKxI,MAAMmI,KAAKwB,GACpBnB,EAAEX,MACJ6B,EAAWxE,KAAK,CACd0E,KAAM,OACNC,UAAW/G,EAAKA,KAChBgH,YAAa,IACbC,YAAa,MACbC,SAAS,SAAD,OAAWlH,EAAKM,SAAhB,WAGRoF,EAAEZ,MACJ8B,EAAWxE,KAAK,CACd0E,KAAM,OACNC,UAAW/G,EAAKA,KAChBgH,YAAa,MACbC,YAAa,MACbC,SAAS,SAAD,OAAWlH,EAAKM,SAAhB,WAGRoF,EAAEd,IACJgC,EAAWxE,KAAK,CACd+E,MAAOC,OACPN,KAAM,KACNC,UAAW/G,EAAKA,KAChBgH,YAAa,MACbC,YAAa,MACbC,SAAS,SAAD,OAAWlH,EAAKM,SAAhB,WAKd,EAAKjD,SAAS,CAAEqJ,kBAAkB,IAElCW,KAAMC,KAAK,cAAeV,GACvBW,MAAK,SAAAC,GAAQ,OAAIC,QAAQC,IAAIF,O,wEAMxB,IAAD,OACP,OACE,2BACE,sBAAQG,QAAR,CAAgBtI,MAAO,CAAEuI,gBAAiB,SACxC,uBACEnJ,MAAM,eACNoJ,SAAS,gEACTC,OACE,uBACEC,UAAU,EACV/I,SAAU,SAACyH,GAAD,OAAY,EAAKpJ,SAAS,CAAEoJ,YACtCuB,UAAW1K,KAAKJ,MAAMuJ,QAEtB,sBAAMwB,QAAN,CAAcC,IAAI,8BAAUjK,IAAI,UAChC,sBAAMgK,QAAN,CAAcC,IAAI,kBAAQjK,IAAI,aAAaoC,SAAsC,IAA5B/C,KAAKJ,MAAM8D,MAAMO,SACtE,sBAAM0G,QAAN,CAAcC,IAAI,8BAAUjK,IAAI,YAAYoC,UAAW/C,KAAKJ,MAAMmI,WAK1E,sBAAQsC,QAAR,CAAgBtI,MAAO,CAAEO,QAAS,SAChC,kBAAC,GAAD,CAAOmG,KAA4B,UAAtBzI,KAAKJ,MAAMuJ,QACtB,kBAAC,EAAD,CAAalD,WAAY,SAAA4E,GACvB,EAAK9K,SAAS,CAAE2D,MAAOmH,EAAK1B,OAAQ,mBAGxC,kBAAC,GAAD,CAAOV,KAA4B,eAAtBzI,KAAKJ,MAAMuJ,QACtB,kBAAC,GAAD,CAAkBlD,WAAY,SAAA6E,GAC5B,IAAM/C,EA1JpB,SAA4BrE,EAAOqH,GACjC,IAAM9B,EAAU,MAAO8B,GAQvB,UAPO9B,EAAW+B,UACd/B,EAAWgC,UACbhC,EAAWvB,YAAa,EACxBuB,EAAWtB,eAAgB,EAC3BsB,EAAWrB,SAAU,SACdqB,EAAWgC,SAEC,IAAjBvH,EAAMO,OACR,MAAM,IAAIiH,MAAM,0GAElB,IAAMnD,EAAO,GAEb,GADArE,EAAMC,SAAQ,SAAAf,GAAE,OAAImF,EAAKnF,GAAM,MACV,IAAjBc,EAAMO,OAGR,OADA8D,EAAKrE,EAAM,IAAMuF,EACVlB,EAQT,GALIkB,EAAWtB,gBACbjE,EAAMC,SAAQ,SAAAf,GAAE,OAAImF,EAAKnF,GAAI+E,eAAgB,YACtCsB,EAAWtB,eAGC,IAAjBjE,EAAMO,OAAc,CAEtB,IAAK,IAAItD,KAAOsI,EACVA,EAAWtI,IACb+H,GAAuBX,EAAMpH,GAGjC,OAAOoH,EAKT,IAAIoD,EAAgBC,KAAKC,IAAI3H,EAAMO,OAAQ,GACvCgF,EAAWxB,OACb0D,EAAgBC,KAAKC,OAAO3H,EAAMO,OAAS,GAAI,IAEjD,IAAK,IAAIqH,EAAI,EAAGA,EAAIH,EAAeG,IACjC5C,GAAuBX,EAAM,QAE/BkB,EAAWzB,MAAO,EAClB,IAAK,IAAI8D,EAAI,EAAGA,EAAI,EAAGA,IACrB5C,GAAuBX,EAAM,MAG/B,GADAkB,EAAW3B,IAAK,EACZ2B,EAAWxB,KAAM,CAEnB,IADA,IAAI8D,KAAmB7H,EAAMO,OAAS,GAC7BqH,EAAI,EAAGA,EAAIC,EAAeD,IACjC5C,GAAuBX,EAAM,QAE/BkB,EAAWxB,MAAO,EAEpB,IAAK,IAAI9G,KAAOsI,EACVA,EAAWtI,IACb+H,GAAuBX,EAAMpH,GAGjC,OAAOoH,EA6FkByD,CAAmB,EAAK5L,MAAM8D,MAAZ,MAC1BoH,EAD0B,CAE7BxD,IAAI,EACJE,MAAM,KAER,EAAKzH,SAAS,CAAEoJ,OAAQ,YAAapB,aAGzC,kBAAC,GAAD,CAAOU,KAA4B,cAAtBzI,KAAKJ,MAAMuJ,QACtB,kBAAC,GAAD,CACEpB,KAAM/H,KAAKJ,MAAMmI,KACjB9B,WAAYjG,KAAKqJ,kBACjBf,WAAYtI,KAAKJ,MAAMwJ,0B,GAnGZhI,IAAMC,a,4DC5BhBoK,G,2MAvEb7L,MAAQ,CACN8L,MAAO,I,mFAGY,IAAD,OACZ9I,EAAK5C,KAAKC,MAAM0L,MAAMC,OAAOhJ,GAE/BiJ,EAASC,OACbD,EAAOE,GAAG,WAAW,WACnBF,EAAOG,KAAK,SAAU,CAAEC,QAASrJ,OAGnCiJ,EAAOE,GAAG,QAAQ,SAACG,GACjB,EAAKnM,SAAS,CAAE2L,MAAOQ,EAAIC,WAG7BN,EAAOE,GAAG,QAAQ,SAACG,GACjB,EAAKtM,MAAM8L,MAAM/H,SAAQ,SAACyI,EAAM/G,GAC1B+G,EAAKC,SAAWH,EAAIG,UACtB,EAAKzM,MAAM8L,MAAMrG,GAAO+G,MAG5B,EAAKrM,SAAS,CAAE2L,MAAM,aAAK,EAAK9L,MAAM8L,YAGxC1L,KAAK6L,OAASA,I,6CAIV7L,KAAK6L,SACP7L,KAAK6L,OAAOS,qBACZtM,KAAK6L,OAAOU,QACZvM,KAAK6L,OAAS,Q,+BAKhB,IAAMW,EAAY,CAChBC,SAAU,uBAAM5L,KAAK,eAAe6L,MAAI,EAAC3K,MAAO,CAAEwF,MAAO,aACzDoF,WAAY,KACZC,QAAS,uBAAM/L,KAAK,UAAU6L,MAAI,EAAC3K,MAAO,CAAEwF,MAAO,cAErD,OACE,2BACE,sBAAQ8C,QAAR,CAAgBtI,MAAO,CAAEuI,gBAAiB,SACxC,uBACEnJ,MAAM,2BACNoJ,SAAS,6CAGb,sBAAQF,QAAR,CAAgBtI,MAAO,CAAEO,QAAS,SAChC,uBAAM+D,UAAU,GACd,wBACEA,UAAQ,EACRwG,WAAY7M,KAAKJ,MAAM8L,MACvBoB,WAAY,SAAA9L,GAAI,OACd,uBAAMN,KAAN,CAAWqB,MAAO,CAAEyG,QAAS,OAAQuE,cAAe,QAClD,yBAAKhL,MAAO,CAAEiL,MAAO,SAClBR,EAAUxL,EAAKiM,SAElB,6BAAMjM,EAAKkM,gB,GA7DN9L,IAAMC,W,mBC0Dd8L,GA1DdzN,YAAO,SAAU,Q,IACjBC,Y,8MAECC,MAAQ,CACN+F,WAAY,I,EAGdC,yBAA2B,SAACD,GAC1B,EAAK5F,SAAS,CAAE4F,gB,EAGlBE,gBAAkB,WAChB,IAAMrC,EAAS,GACfC,IAAEE,QAAQ,EAAK1D,MAAMyD,MAAMA,OAAO,SAAAhB,GAAI,OAAIc,EAAOd,EAAKE,KAAM,KAC5D,EAAK7C,SAAS,CAAE4F,WAAYnC,K,EAG9BsC,kBAAoB,WAClB,EAAK/F,SAAS,CAAE4F,WAAY,M,wEAGpB,IAAD,OACP,OACE,wBACEyH,UAAQ,EACRjM,MAAO,8BAAM,uBAAMN,KAAK,oBAAjB,6BACPwM,UAAU,QACVC,QAAStN,KAAKC,MAAME,OAAOc,gBAC3BsM,QAAS,kBAAM,EAAKtN,MAAME,OAAOc,iBAAkB,GACnDuM,OAAQ,IACRR,MAAM,QACNS,YAAa,CAAEC,WAAY,WAC3BrL,UAAW,CAAEC,QAAS,IAEtB,sBAAQ+H,QAAR,CAAgBtI,MAAO,CAAE2L,WAAY,OAAQpL,QAAS,SACpD,uBAAQzB,KAAK,UAAUE,QAAS,kBAAM,EAAKd,MAAME,OAAOqG,gBAAiB,GAAMzE,MAAO,CAAEC,YAAa,SAArG,4BACA,sBAAQuE,MAAR,CAAcxE,MAAO,CAAEC,YAAa,SAClC,uBAAQjB,QAASf,KAAK6F,iBAAtB,gBACA,uBAAQ9E,QAASf,KAAK8F,mBAAtB,6BAEF,sBAAQS,MAAR,CAAcxE,MAAO,CAAEC,YAAa,SAClC,uDACA,yDAGJ,kBAAC,EAAD,CACE0B,MAAO1D,KAAKC,MAAMyD,MAAMA,MACxBjB,WAAS,EACThB,WAAS,EACT+D,YAAa,SAACxE,GAAD,OAAUmJ,QAAQC,IAAIpJ,IACnCoC,qBAAsBpD,KAAK4F,yBAC3BtC,aAActD,KAAKJ,MAAM+F,kB,GAjDPvE,IAAMC,a,sUCD5BsM,GAFLjO,YAAO,Q,IACPC,Y,8MAECC,MAAQ,CACNgO,cAAc,EACdC,mBAAeC,G,EAGjBC,uBAAyB,SAAAC,GACvB,EAAKjO,SAAS,CACZ6N,aAAcI,EAAE9I,OAAOpD,W,EAI3BmM,aAAe,WACb,EAAKhO,MAAMyG,KAAKC,gBAAe,SAACC,EAAKC,GAC9BD,GACC,EAAK3G,MAAMiO,UACb,EAAKjO,MAAMiO,SAASrH,GAAQ,O,EAMpCsH,mBAAqB,WACnB,EAAKlO,MAAMyG,KAAKC,gBAAe,SAACC,EAAKC,GAC9BD,GACC,EAAK3G,MAAMiO,WACb,EAAKjO,MAAMiO,SAASrH,GAAQ,GAC5B,EAAKuH,mB,EAMbA,YAAc,WACZ,EAAKnO,MAAMyG,KAAK2H,cAChB,EAAKtO,SAAS,CACZ8N,mBAAeC,K,EAInBQ,qBAAuB,SAAC1L,GACtB,EAAK7C,SAAS,CACZ8N,cAAejL,IAEjB,IAAI2L,EAAIC,aAAK,EAAKvO,MAAMyD,MAAMA,MAAMd,IACpC,EAAK3C,MAAMyG,KAAK+H,e,2VAAhB,IACKF,EADL,CAEEzL,KAAM,GACNJ,KAAM,O,wEAIA,IACAoE,EAAsB9G,KAAKC,MAAMyG,KAAjCI,kBAER,OACE,uBAAMC,OAAO,YACX,wBAAUV,UAAU,EAAOqI,iBAAkB,CAAC,SAAU,UACtD,uBAAUC,MAAV,CAAgBC,OAAO,2BAAOjO,IAAI,UAChC,sBAAMD,KAAN,CAAWmO,MAAM,0DACf,wBACEC,YAAU,EACVC,YAAY,2BACZC,iBAAiB,WACjBC,aAAc,SAACC,EAAOC,GAEpB,OADUA,EAAOlP,MAAM4O,MAAMO,cAAgB,IAAMD,EAAOlP,MAAMwE,MAAMzB,SAAW,IAAMmM,EAAOlP,MAAMwE,MAAM/B,KAAO,IAAMyM,EAAOlP,MAAMwE,MAAMxB,MACjIoM,QAAQH,EAAME,gBAAkB,GAE3CE,gBAAgB,QAChB5N,SAAU1B,KAAKsO,qBACf7J,MAAOzE,KAAKJ,MAAMiO,eAEjB9J,OAAO8C,OAAO7G,KAAKC,MAAMyD,MAAMA,OAAOY,KAAI,SAAAiK,GACzC,OACE,uBAAQgB,OAAR,CAAe9K,MAAO8J,EAAE3L,GAAIiM,MAAON,EAAEzL,KAAMnC,IAAK4N,EAAE3L,IAChD,6BAAM2L,EAAEzL,MACR,6BAAK,sBAAYD,KAAZ,CAAiBE,UAAQ,GAAEwL,EAAEvL,SAA7B,IAAwCuL,EAAE7L,KAA1C,IAAiD6L,EAAEtL,cAOpE,uBAAU0L,MAAV,CAAgBC,OAAO,2BAAOjO,IAAI,SAChC,sBAAMD,KAAN,CAAWmO,MAAM,4BACd/H,EAAkB,OAAlBA,CACC,wBAAOiI,YAAY,2CAGvB,sBAAMrO,KAAN,CAAWmO,MAAM,gBACd/H,EAAkB,OAAQ,CACzB0I,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gDAJd5I,CAQC,wBAAOiI,YAAY,0DAGvB,sBAAMrO,KAAN,CAAWmO,MAAM,gBACd/H,EAAkB,OAAQ,CACzB0I,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,mCAGbzI,aAAc,MAPfH,CASC,+BAGJ,sBAAMpG,KAAN,CAAWmO,MAAM,kCACd/H,EAAkB,WAAY,CAC7B0I,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,sDAJd5I,CAQC,+BAGJ,sBAAMpG,KAAN,KACGoG,EAAkB,eAAgB,CACjCG,cAAc,GADfH,CAGC,uBAAUhF,QAAS9B,KAAKJ,MAAMgO,aAAclM,SAAU1B,KAAK+N,wBAA3D,0CAGH/N,KAAKJ,MAAMgO,aACV,oCACE,sBAAMlN,KAAN,CAAWmO,MAAM,gBACd/H,EAAkB,aAAc,CAC/B0I,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,oCAJd5I,CAQC,uBAAO6I,SAAP,QAGJ,sBAAMjP,KAAN,CAAWmO,MAAM,4BACd/H,EAAkB,qBAAlBA,CACC,uBAAO8I,SAAP,SAKN,sBAAMlP,KAAN,CAAWmO,MAAM,gBACd/H,EAAkB,WAAY,CAC7B0I,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,gDAJd5I,CAQC,uBAAO8I,SAAP,SAKR,uBAAUjB,MAAV,CAAgBC,OAAO,2BAAOjO,IAAI,YAChC,sBAAMD,KAAN,CAAWmO,MAAM,gCACd/H,EAAkB,KAAM,CACvBG,aAAc,IADfH,CAGC,+BAGJ,sBAAMpG,KAAN,CAAWmO,MAAM,kCACd/H,EAAkB,OAAQ,CACzBG,aAAc,IADfH,CAGC,iCAKR,yBAAK/E,MAAO,CAAE8N,OAAQ,SACpB,uBAAQhP,KAAK,UAAUE,QAASf,KAAKiO,cAArC,gBADF,OAEE,uBAAQlN,QAASf,KAAKmO,oBAAtB,oDAFF,OAGE,uBAAQpN,QAASf,KAAKoO,aAAtB,sB,GA5LYhN,IAAMC,a,QAmMtByO,GAAiB,IAAK3I,OAAO,CAAErE,KAAM,YAApB,CAAkC6K,IAiC1CoC,GA/BdrQ,YAAO,SAAU,Q,IACjBC,Y,8MAECsO,aAAe,SAACpH,EAAQmJ,GAClB,EAAK/P,MAAMyD,MAAMuM,QAAQpJ,IACvBmJ,IACF,EAAK/P,MAAME,OAAOqG,gBAAiB,I,wEAK/B,IAAD,OACP,OACE,wBACE4G,UAAQ,EACR8C,gBAAc,EACd/O,MAAM,4CACNkM,UAAU,QACVC,QAAStN,KAAKC,MAAME,OAAOqG,eAC3B+G,QAAS,kBAAM,EAAKtN,MAAME,OAAOqG,gBAAiB,GAClDgH,OAAQ,IACRR,MAAO,IACP3K,UAAW,CAAEC,QAAS,IAEtB,kBAACwN,GAAD,CAAgB5B,SAAUlO,KAAKiO,oB,GAtBZ7M,IAAMC,a,QClMZ8O,G,iLAEjB,OACE,uBAAQpO,MAAO,CAAEqO,UAAW,UAC1B,kBAACC,EAAD,MACA,sBAAQhG,QAAR,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiG,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,gBAAgB3H,UAAW6C,OAG3C,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAjByBpK,a,kBCHlBmP,I,OAFD,I,8KAJXC,M,yEAA6B,K,+CAC7BA,M,yEAA4B,K,KC6EhBD,GAFD,I,GApCXE,KAAOC,M,cApCR,aAAe,uDACb3Q,KAAKiQ,QAAQ,CACXnN,KAAM,iBACNJ,KAAM,cACNM,SAAU,OACV4N,SAAU,MACV3N,KAAM,GACNW,GAAI,aAEN5D,KAAKiQ,QAAQ,CACXnN,KAAM,iBACNJ,KAAM,eACNM,SAAU,OACV4N,SAAU,MACV3N,KAAM,GACNW,GAAI,WACJC,KAAM,cAER7D,KAAKiQ,QAAQ,CACXnN,KAAM,iBACNJ,KAAM,eACNM,SAAU,OACV4N,SAAU,MACV3N,KAAM,KAERjD,KAAKiQ,QAAQ,CACXnN,KAAM,iBACNJ,KAAM,eACNM,SAAU,OACV4N,SAAU,MACV3N,KAAM,GACNW,GAAI,WACJC,KAAM,c,oDAKFgN,GAKN,OAJKA,EAAK/N,OACR+N,EAAK/N,KAAL,UAAe+N,EAAK7N,SAApB,YAAgC6N,EAAKnO,KAArC,YAA6CmO,EAAK5N,OAEpD4N,EAAK5N,KAAO6N,SAASD,EAAK5N,MACrB4N,EAAK5N,MAO6D,IAAnEc,OAAO8C,OAAO7G,KAAK0D,OAAOY,KAAI,SAAAiK,GAAC,OAAIA,EAAE7L,QAAM2M,QAAQwB,EAAKnO,OAC1D,IAAMwD,MAAM,CACV/E,MAAO,2BACPgF,QAAQ,gBAAD,OAAQ0K,EAAKnO,KAAb,oEAEF,IAG8D,IAAnEqB,OAAO8C,OAAO7G,KAAK0D,OAAOY,KAAI,SAAAiK,GAAC,OAAIA,EAAEzL,QAAMuM,QAAQwB,EAAK/N,OAC1D,IAAMoD,MAAM,CACV/E,MAAO,2BACPgF,QAAQ,4BAAD,OAAU0K,EAAK/N,KAAf,oEAEF,IAET+N,EAAKjO,GAAKkH,OACV+G,EAAKjN,GAAKiN,EAAKjN,IAAM,GACrBiN,EAAKhN,KAAOgN,EAAKhN,MAAQ,GACzB7D,KAAK0D,MAAMmN,EAAKjO,IAAMiO,GACf,IAzBL,IAAM3K,MAAM,CACV/E,MAAO,2BACPgF,QAAQ,8BAEH,O,2CAjDVsK,M,wEAAmB,M,mHCgBPD,GAFD,I,GAbXE,KAAOC,M,kJACMjN,EAAOqN,EAAQC,GAC3B,IAAMC,EAAI,CACRrO,GAAIkH,OACJpG,MAAOwN,KAAKC,MAAMD,KAAKE,UAAU1N,IACjCqN,OAAQG,KAAKC,MAAMD,KAAKE,UAAUL,IAClCC,SAAUE,KAAKC,MAAMD,KAAKE,UAAUJ,KAGtC,OADAhR,KAAKqR,YAAYJ,EAAErO,IAAMqO,GAClB,M,iDAXRR,M,wEAAyB,M,+HCO5Ba,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CACE7N,MAAO8N,GACPH,YAAaI,GACbtR,OAAQuR,IAER,kBAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.8aa4c33a.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport { observer, inject } from 'mobx-react';\n\nconst { Sider } = Layout;\n\n@inject('layers')\n@observer\nclass SideMenu extends React.Component {\n  state = {\n    collapsed: false,\n  };\n\n  onCollapse = collapsed => {\n    this.setState({ collapsed });\n  };\n\n  render() {\n    const { location, layers } = this.props;\n\n    return (\n      <Sider\n      >\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"vertical\" defaultSelectedKeys={['/']} selectedKeys={[location.pathname]}>\n          <Menu.Item key=\"/deploy\">\n            <NavLink to=\"/deploy\">\n              <Icon type=\"download\" />\n              部署\n            </NavLink>\n          </Menu.Item>\n          <Menu.Item key=\"/notifications\">\n            <NavLink to=\"/notifications\">\n              <Icon type=\"dashboard\" />\n              集群管理\n            </NavLink>\n          </Menu.Item>\n        </Menu>\n        <Menu theme=\"dark\" mode=\"vertical\" selectable={false} onClick={(item) => {\n          if (item.key === 'hosts') {\n            layers.hostListVisible = true;\n          }\n        }}>\n          <Menu.Item key=\"hosts\">\n            <Icon type=\"deployment-unit\" />\n            配置机器\n          </Menu.Item>\n          <Menu.Item key=\"settings\">\n            <Icon type=\"setting\" />\n            设置\n          </Menu.Item>\n          <Menu.SubMenu\n            key=\"language\"\n            title={\n              <span>\n                <Icon type=\"global\" />\n                语言\n              </span>\n            }>\n            <Menu.Item key=\"zh\">\n              简体中文\n            </Menu.Item>\n            <Menu.Item key=\"en\">\n              英文\n            </Menu.Item>\n          </Menu.SubMenu>\n        </Menu>\n      </Sider>\n    )\n  }\n}\n\nexport default withRouter(SideMenu);\n","import { Layout } from 'antd';\nimport React from 'react';\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <Layout>\n        Hello World Home\n      </Layout>\n    );\n  }\n}\n","import { Icon, Col, Row, Card, Typography, Checkbox, Empty, Button } from 'antd';\nimport React from 'react';\nimport _ from 'lodash';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport './HostView.less';\n\n@observer\nclass VisDc extends React.Component {\n  render() {\n    return (\n      <div className=\"host-view-vis-dc\">\n        <div className=\"host-view-vis-dc-title\">\n          {this.props.checkable ? (\n            <Checkbox\n              onChange={this.props.onCheckChange}\n              indeterminate={this.props.checkIndeterminate}\n              checked={this.props.checked}\n              style={{ marginRight: '10px' }}\n            />\n          ) : null}\n          <Icon type=\"cloud\" /> 机房：{this.props.dcName || '默认'}\n        </div>\n        <div className=\"host-view-vis-dc-content\">\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass VisRack extends React.Component {\n  render() {\n    return (\n      <Card\n        title={<>\n          {this.props.checkable ? (\n            <Checkbox\n              onChange={this.props.onCheckChange}\n              indeterminate={this.props.checkIndeterminate}\n              checked={this.props.checked}\n              style={{ marginRight: '10px' }}\n            />\n          ) : null}\n          <Icon type=\"database\" /> 机架：{this.props.rackName || '默认'}\n        </>}\n        // bordered={false}\n        bodyStyle={{ padding: 0 }}\n      >\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\n@observer\nclass VisHost extends React.Component {\n  handleClick = () => {\n    if (this.props.clickable && this.props.onClick) {\n      this.props.onClick(this.props.host);\n    }\n  }\n\n  render() {\n    return (\n      <div className={classNames([\"host-view-vis-host\", { clickable: this.props.clickable }])} key={this.props.host.id} onClick={this.handleClick}>\n        {this.props.checkable ? (\n          <Checkbox\n            onChange={this.props.onCheckChange}\n            checked={this.props.checked}\n            style={{ marginRight: '10px' }}\n          />\n        ) : null}\n        <div className=\"host-view-vis-host-content\">\n          <div><Typography.Text>{ this.props.host.name }</Typography.Text></div>\n          <div><Typography.Text disabled>{ this.props.host.username }@{ this.props.host.host }:{ this.props.host.port }</Typography.Text></div>\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n}\n\n@observer\nclass HostView extends React.Component {\n  updateCheckedHost = (checked) => {\n    if (this.props.onCheckedHostsChange) {\n      this.props.onCheckedHostsChange(checked);\n    }\n  }\n\n  handleHostCheckChange = (id, checked) => {\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      [id]: checked,\n    });\n  };\n\n  handleRackCheckChange = (dcName, rackName, checked) => {\n    const checks = {};\n    _(this.props.hosts).forEach(host => {\n      if (host.dc === dcName && host.rack === rackName) {\n        checks[host.id] = checked;\n      }\n    });\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      ...checks\n    });\n  };\n\n  handleDcCheckChange = (dcName, checked) => {\n    const checks = {};\n    _(this.props.hosts).forEach(host => {\n      if (host.dc === dcName) {\n        checks[host.id] = checked;\n      }\n    });\n    this.updateCheckedHost({\n      ...this.props.checkedHosts,\n      ...checks\n    });\n  };\n\n  render() {\n    const numberOfHosts = Object.keys(this.props.hosts).length;\n\n    if (numberOfHosts === 0) {\n      return (\n        <div style={{ padding: '50px' }}>\n          <Empty description=\"您还没有配置机器\"></Empty>\n        </div>\n      );\n    }\n\n    // Group hosts by DC and Rack\n    const groupByDc = _(this.props.hosts)\n      .groupBy('dc')\n      .toPairs()\n      .map((kv) => {\n        return [kv[0], _(kv[1])\n          .groupBy('rack')\n          .toPairs()\n          .sortBy(0)\n          .value()];\n      })\n      .sortBy(0)\n      .value();\n\n    const allDcs = {};\n    const allRacks = {};\n    const dcCheckStates = {};\n    const rackCheckStates = {};\n\n    if (this.props.checkable) {\n      _.forEach(this.props.hosts, host => {\n        if (!allDcs[host.dc]) {\n          allDcs[host.dc] = [];\n        }\n        allDcs[host.dc].push(host);\n        if (!allRacks[host.dc + '|' + host.rack]) {\n          allRacks[host.dc + '|' + host.rack] = [];\n        }\n        allRacks[host.dc + '|' + host.rack].push(host);\n      });\n\n\n      for (const dc in allDcs) {\n        let hasChecked = false;\n        let hasUnchecked = false;\n        allDcs[dc].forEach(item => {\n          if (this.props.checkedHosts && this.props.checkedHosts[item.id]) {\n            hasChecked = true;\n          } else {\n            hasUnchecked = true;\n          }\n        });\n        if (hasChecked && hasUnchecked) {\n          dcCheckStates[dc] = {\n            check: true,\n            indeterminate: true,\n          };\n        } else if (hasChecked) {\n          dcCheckStates[dc] = {\n            check: true,\n            indeterminate: false,\n          };\n        } else if (hasUnchecked) {\n          dcCheckStates[dc] = {\n            check: false,\n            indeterminate: false,\n          };\n        }\n      }\n\n      for (const rack in allRacks) {\n        let hasChecked = false;\n        let hasUnchecked = false;\n        allRacks[rack].forEach(item => {\n          if (this.props.checkedHosts[item.id]) {\n            hasChecked = true;\n          } else {\n            hasUnchecked = true;\n          }\n        });\n        if (hasChecked && hasUnchecked) {\n          rackCheckStates[rack] = {\n            check: true,\n            indeterminate: true,\n          };\n        } else if (hasChecked) {\n          rackCheckStates[rack] = {\n            check: true,\n            indeterminate: false,\n          };\n        } else if (hasUnchecked) {\n          rackCheckStates[rack] = {\n            check: false,\n            indeterminate: false,\n          };\n        }\n      }\n    }\n\n    return (\n      <>\n        {groupByDc.map((kv) =>\n          <VisDc\n            dcName={kv[0]}\n            key={kv[0]}\n            checkable={this.props.checkable}\n            checked={this.props.checkable && dcCheckStates[kv[0]].check}\n            checkIndeterminate={this.props.checkable && dcCheckStates[kv[0]].indeterminate}\n            onCheckChange={(target) => {\n              this.handleDcCheckChange(kv[0], target.target.checked)\n            }}\n          >\n            {_.chunk(kv[1], 3).map((chunks, idx) =>\n              <Row gutter={16} key={idx}>\n                {chunks.map(item => (\n                  <Col span={8} key={item[0]}>\n                    <VisRack\n                      rackName={item[0]}\n                      key={item[0]}\n                      checkable={this.props.checkable}\n                      checked={this.props.checkable && rackCheckStates[kv[0]+'|'+item[0]].check}\n                      checkIndeterminate={this.props.checkable && rackCheckStates[kv[0]+'|'+item[0]].indeterminate}\n                      onCheckChange={(target) => {\n                        this.handleRackCheckChange(kv[0], item[0], target.target.checked)\n                      }}\n                    >\n                      {item[1].map(host =>\n                        <VisHost\n                          host={host}\n                          key={host.id}\n                          clickable={this.props.clickable}\n                          onClick={this.props.onHostClick}\n                          checkable={this.props.checkable}\n                          checked={this.props.checkable && this.props.checkedHosts[host.id]}\n                          onCheckChange={(target) => {\n                            this.handleHostCheckChange(host.id, target.target.checked)}\n                          }\n                        >{ this.props.hostChildren ? this.props.hostChildren[host.id] : null }</VisHost>\n                      )}\n                    </VisRack>\n                  </Col>\n                ))}\n              </Row>\n            )}\n          </VisDc>\n        )}\n      </>\n    );\n  }\n}\n\nexport default HostView;\n","import _ from 'lodash';\nimport { Modal, Card, Empty, Button, Icon } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\n@inject('layers', 'hosts')\n@observer\nclass DeployHost extends React.Component {\n  state = {\n    hostChecks: {},\n  };\n\n  handleCheckedHostsChange = (hostChecks) => {\n    this.setState({ hostChecks });\n  }\n\n  handleSelectAll = () => {\n    const checks = {};\n    _.forEach(this.props.hosts.hosts, host => checks[host.id] = true);\n    this.setState({ hostChecks: checks });\n  }\n\n  handleDeSelectAll = () => {\n    this.setState({ hostChecks: {} });\n  }\n\n  handleNext = () => {\n    const hostIds = [];\n    for (let id in this.state.hostChecks) {\n      if (this.state.hostChecks[id]) {\n        hostIds.push(id);\n      }\n    }\n    if (hostIds.length === 0) {\n      Modal.error({\n        title: '操作失败',\n        content: '请选择至少一个目标机器用于部署 TiDB 集群',\n      });\n      return;\n    }\n    if (this.props.onNextStep) {\n      this.props.onNextStep(hostIds);\n    }\n  }\n\n  render() {\n    const hasHosts = Object.keys(this.props.hosts.hosts).length > 0;\n    return (\n      <Card\n        bordered={false}\n        title=\"请选择部署 TiDB 集群的目标机器\"\n        bodyStyle={{ padding: 0 }}\n        extra={\n          <Button.Group>\n            <Button onClick={() => this.props.layers.hostListVisible = true}>配置机器</Button>\n            <Button onClick={() => this.props.layers.hostAddVisible = true}>创建机器</Button>\n            <Button onClick={this.handleSelectAll}>全选</Button>\n            <Button onClick={this.handleDeSelectAll}>取消全选</Button>\n          </Button.Group>\n        }\n      >\n        { !hasHosts ? (\n          <Empty description=\"您还没有配置机器\">\n            <Button type=\"primary\" onClick={() => this.props.layers.hostAddVisible = true}>添加机器</Button>\n          </Empty>\n        ) : (\n          <>\n            <HostView\n              hosts={this.props.hosts.hosts}\n              checkable\n              onCheckedHostsChange={this.handleCheckedHostsChange}\n              checkedHosts={this.state.hostChecks}\n            />\n            <div style={{ padding: '16px' }}>\n              <Button type=\"primary\" onClick={this.handleNext}>保存并选择组件 <Icon type=\"right\" /></Button>\n            </div>\n          </>\n        ) }\n      </Card>\n    );\n  }\n}\n\nexport default DeployHost;\n","import { Card, Button, Form, Checkbox, Icon } from 'antd';\nimport React from 'react';\n\nclass DeployComponents extends React.Component {\n  handleNext = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onNextStep) {\n          this.props.onNextStep(values);\n        }\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Card\n        bordered={false}\n        title=\"请选择需要部署的 TiDB 组件\"\n      >\n        <Form layout=\"vertical\">\n        <Form.Item extra=\"PD 组件负责协调事务与调度数据，必选\">\n            <Checkbox disabled checked>PD</Checkbox>\n          </Form.Item>\n          <Form.Item extra=\"TiKV 组件负责存储数据，必选\">\n            <Checkbox disabled checked>TiKV</Checkbox>\n          </Form.Item>\n          <Form.Item extra=\"TiDB 组件提供 SQL 层计算功能，若不勾选则只部署 KV 数据库\">\n            {getFieldDecorator('tidb', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>TiDB</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"收集并存储所有组件及节点的监控，并提供可视化界面展示\">\n            {getFieldDecorator('metrics', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>监控（Prometheus、Node Exporter 及 Grafana）</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"TiSpark 组件可以计算大型分析型 SQL（OLAP）\">\n            {getFieldDecorator('tispark', {\n              valuePropName: 'checked',\n              initialValue: false,\n            })(\n            <Checkbox>TiSpark</Checkbox>\n            )}\n          </Form.Item>\n          <Form.Item extra=\"在组件进程崩溃时基于 Supervise 自动重启组件（注：不会开机自启动）\">\n            {getFieldDecorator('supervise', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n            <Checkbox>Supervise 进程守护</Checkbox>\n            )}\n          </Form.Item>\n          <Button type=\"primary\" onClick={this.handleNext}>保存并预览部署方案 <Icon type=\"right\" /></Button>\n        </Form>\n      </Card>\n    );\n  }\n}\n\nconst Wrapper = Form.create({ name: 'deploy_components' })(DeployComponents);\n\nexport default Wrapper;\n","import _ from 'lodash';\nimport { Card, Tag, Button, Form, Checkbox, Icon, Typography } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\nconst colors = {\n  pd: 'red',\n  tikv: 'orange',\n  tidb: 'magenta',\n  prometheus: 'cyan',\n  node_exporter: 'blue',\n  grafana: 'purple',\n  tispark: 'gold',\n};\n\nconst componentTags = {\n  pd: <Tag key=\"pd\" color={colors['pd']}>PD</Tag>,\n  tikv: <Tag key=\"tikv\" color={colors['tikv']}>TiKV</Tag>,\n  tidb: <Tag key=\"tidb\" color={colors['tidb']}>TiDB</Tag>,\n  prometheus: <Tag key=\"prometheus\" color={colors['prometheus']}>Prometheus</Tag>,\n  node_exporter: <Tag key=\"node_exporter\" color={colors['node_exporter']}>NodeExporter</Tag>,\n  grafana: <Tag key=\"grafana\" color={colors['grafana']}>Grafana</Tag>,\n  tispark: <Tag key=\"tispark\" color={colors['tispark']}>TiSpark</Tag>,\n};\n\n@inject('hosts')\n@observer\nclass DeployViewTopology extends React.Component {\n  handleNext = () => {\n    if (this.props.onNextStep) {\n      this.props.onNextStep();\n    }\n  }\n\n  render() {\n    if (!this.props.topo) {\n      return null;\n    }\n\n    const filteredHosts = _(this.props.hosts.hosts)\n      .toPairs()\n      .filter((kv) => kv[0] in this.props.topo)\n      .fromPairs()\n      .value();\n\n    const hostChildren = {};\n    for (let id in this.props.topo) {\n      const t = [];\n      for (let c in this.props.topo[id]) {\n        if (this.props.topo[id][c]) {\n          t.push(componentTags[c]);\n        }\n      }\n      hostChildren[id] = t;\n    }\n\n    return (\n      <Card\n        bordered={false}\n        title=\"查看并修改部署方案\"\n        bodyStyle={{ padding: 0 }}\n      >\n        <Card>\n          <div><p>您可以在主机之间拖动组件，从而修改部署方案，或从此区域拖动组件到主机中。</p></div>\n          <div>{Object.values(componentTags)}</div>\n        </Card>\n        <HostView\n          hosts={filteredHosts}\n          hostChildren={hostChildren}\n        />\n        <div style={{ padding: '16px' }}>\n          <Button type=\"primary\" onClick={this.handleNext} loading={this.props.inProgress}>开始部署 <Icon type=\"right\" /></Button>\n        </div>\n      </Card>\n    );\n  }\n}\n\nexport default DeployViewTopology;\n","import _ from 'lodash';\nimport { Layout, PageHeader, Tabs } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport DeployHosts from './Hosts';\nimport DeployComponents from './Components';\nimport DeployViewTopology from './ViewTopology';\nimport uniqid from 'uniqid';\nimport axios from 'axios';\n\nclass Hider extends React.Component {\n  render() {\n    return (\n      <div style={{ display: this.props.show ? 'block' : 'none' }}>{this.props.children}</div>\n    )\n  }\n}\n\nfunction allocateOnLightestNode(topos, component) {\n  let minValue = Number.MAX_VALUE;\n  let minNodeId = null;\n\n  for (let id in topos) {\n    if (topos[id][component]) {\n      continue;\n    }\n    const components = _.filter(Object.values(topos[id])).length;\n    if (components < minValue) {\n      minValue = components;\n      minNodeId = id;\n    }\n  }\n\n  if (minNodeId) {\n    topos[minNodeId][component] = true;\n  }\n}\n\nfunction organizeComponents(hosts, componentsOriginal) {\n  const components = {...componentsOriginal};\n  delete components.supervise;\n  if (components.metrics) {\n    components.prometheus = true;\n    components.node_exporter = true;\n    components.grafana = true;\n    delete components.metrics;\n  }\n  if (hosts.length === 0) {\n    throw new Error('必须选择至少一个目标机器部署 TiDB 组件');\n  }\n  const topo = {};\n  hosts.forEach(id => topo[id] = {});\n  if (hosts.length === 1) {\n    // 1 machine, put all in one\n    topo[hosts[0]] = components;\n    return topo;\n  }\n\n  if (components.node_exporter) {\n    hosts.forEach(id => topo[id].node_exporter = true);\n    delete components.node_exporter;\n  }\n\n  if (hosts.length === 2) {\n    // 2 machine: Each component (except for the node_exporter) distributes on 1 node.\n    for (let key in components) {\n      if (components[key]) {\n        allocateOnLightestNode(topo, key);\n      }\n    }\n    return topo;\n  }\n  // Otherwise (>= 3):\n  // If tidb, allocate half of the machine for TiDB and half of the machine for TiKV.\n  // If not, allocate all mechines for TiKV.\n  let tikvInstances = Math.max(hosts.length, 3);\n  if (components.tidb) {\n    tikvInstances = Math.max(~~(hosts.length / 2), 3);\n  }\n  for (let i = 0; i < tikvInstances; i++) {\n    allocateOnLightestNode(topo, 'tikv');\n  }\n  components.tikv = false;\n  for (let i = 0; i < 3; i++) {\n    allocateOnLightestNode(topo, 'pd');\n  }\n  components.pd = false;\n  if (components.tidb) {\n    let tidbInstances = ~~(hosts.length / 2);\n    for (let i = 0; i < tidbInstances; i++) {\n      allocateOnLightestNode(topo, 'tidb');\n    }\n    components.tidb = false;\n  }\n  for (let key in components) {\n    if (components[key]) {\n      allocateOnLightestNode(topo, key);\n    }\n  }\n  return topo;\n}\n\n@inject('hosts')\n@observer\n@withRouter\nclass DeployMain extends React.Component {\n  state = {\n    tabKey: 'hosts',\n    hosts: [],\n    topo: null,\n    inSubmitProgress: false,\n  };\n\n  // state = {\n  //   tabKey: 'components',\n  //   hosts: [this.props.hosts.hosts[Object.keys(this.props.hosts.hosts)[0]].id],\n  //   topo: null,\n  //   inSubmitProgress: false,\n  // };\n\n  handleStartDeploy = () => {\n    const submitData = [];\n    for (let hostId in this.state.topo) {\n      const host = this.props.hosts.hosts[hostId];\n      let c = this.state.topo[hostId];\n      if (c.tidb) {\n        submitData.push({\n          role: 'tidb',\n          server_ip: host.host,\n          server_port: 4000,\n          status_port: 10080,\n          data_dir: `/home/${host.username}/tidb`\n        });\n      }\n      if (c.tikv) {\n        submitData.push({\n          role: 'tikv',\n          server_ip: host.host,\n          server_port: 20160,\n          status_port: 20180,\n          data_dir: `/home/${host.username}/tikv`\n        });\n      }\n      if (c.pd) {\n        submitData.push({\n          pd_id: uniqid(),\n          role: 'pd',\n          server_ip: host.host,\n          server_port: 20160,\n          status_port: 20180,\n          data_dir: `/home/${host.username}/tikv`\n        });\n      }\n    }\n\n    this.setState({ inSubmitProgress: true });\n\n    axios.post('/submitTask', submitData)\n      .then(response => console.log(response));\n\n    // this.props.history.push('/progress/1');\n    // TODO: Start HTTP Request\n  }\n\n  render() {\n    return (\n      <Layout>\n        <Layout.Content style={{ backgroundColor: '#FFF' }}>\n          <PageHeader\n            title=\"部署\"\n            subTitle=\"部署一个新的 TiDB / TiKV 集群\"\n            footer={\n              <Tabs\n                animated={false}\n                onChange={(tabKey) => this.setState({ tabKey })}\n                activeKey={this.state.tabKey}\n              >\n                <Tabs.TabPane tab=\"1. 目标机器\" key=\"hosts\" />\n                <Tabs.TabPane tab=\"2. 组件\" key=\"components\" disabled={this.state.hosts.length === 0} />\n                <Tabs.TabPane tab=\"3. 部署方案\" key=\"view_topo\" disabled={!this.state.topo} />\n              </Tabs>\n            }\n          />\n        </Layout.Content>\n        <Layout.Content style={{ padding: '20px' }}>\n          <Hider show={this.state.tabKey === 'hosts'}>\n            <DeployHosts onNextStep={ids => {\n              this.setState({ hosts: ids, tabKey: 'components' });\n            }}/>\n          </Hider>\n          <Hider show={this.state.tabKey === 'components'}>\n            <DeployComponents onNextStep={configs => {\n              const topo = organizeComponents(this.state.hosts, {\n                ...configs,\n                pd: true,\n                tikv: true,\n              });\n              this.setState({ tabKey: 'view_topo', topo });\n            }}/>\n          </Hider>\n          <Hider show={this.state.tabKey === 'view_topo'}>\n            <DeployViewTopology\n              topo={this.state.topo}\n              onNextStep={this.handleStartDeploy}\n              inProgress={this.state.inSubmitProgress}\n            />\n          </Hider>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n\nexport default DeployMain;\n","import _ from 'lodash';\nimport { Card, Layout, PageHeader, List, Icon } from 'antd';\nimport React from 'react';\n\nimport io from 'socket.io-client';\n\nclass Progress extends React.Component {\n  state = {\n    tasks: [],\n  };\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n\n    var socket = io();\n    socket.on('connect', () => {\n      socket.emit('deploy', { task_id: id });\n    });\n\n    socket.on('sync', (res) => {\n      this.setState({ tasks: res.steps });\n    });\n\n    socket.on('task', (res) => {\n      this.state.tasks.forEach((task, idx) => {\n        if (task.step_id == res.step_id) {\n          this.state.tasks[idx] = task;\n        }\n      });\n      this.setState({ tasks: [...this.state.tasks] });\n    });\n\n    this.socket = socket;\n  }\n\n  componentWillUnmount() {\n    if (this.socket) {\n      this.socket.removeAllListeners();\n      this.socket.close();\n      this.socket = null;\n    }\n  }\n\n  render() {\n    const statusMap = {\n      finished: <Icon type=\"check-circle\" spin style={{ color: '#37b24d' }} />,\n      unfinished: null,\n      running: <Icon type=\"loading\" spin style={{ color: '#fa5252' }} />,\n    };\n    return (\n      <Layout>\n        <Layout.Content style={{ backgroundColor: '#FFF' }}>\n          <PageHeader\n            title=\"部署进度\"\n            subTitle=\"正在部署集群...\"\n          />\n        </Layout.Content>\n        <Layout.Content style={{ padding: '20px' }}>\n          <Card bordered={false}>\n            <List\n              bordered\n              dataSource={this.state.tasks}\n              renderItem={item => (\n                <List.Item style={{ display: 'flex', flexDirection: 'row' }}>\n                  <div style={{ width: '60px' }}>\n                    {statusMap[item.status]}\n                  </div>\n                  <div>{item.msg}</div>\n                </List.Item>\n              )}\n            />\n          </Card>\n        </Layout.Content>\n      </Layout>\n    );\n  }\n}\n\nexport default Progress;\n","import _ from 'lodash';\nimport { Drawer, Icon, Layout, Button } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport HostView from '../components/HostView';\n\n@inject('layers', 'hosts')\n@observer\nclass LayerHostList extends React.Component {\n  state = {\n    hostChecks: {},\n  };\n\n  handleCheckedHostsChange = (hostChecks) => {\n    this.setState({ hostChecks });\n  }\n\n  handleSelectAll = () => {\n    const checks = {};\n    _.forEach(this.props.hosts.hosts, host => checks[host.id] = true);\n    this.setState({ hostChecks: checks });\n  }\n\n  handleDeSelectAll = () => {\n    this.setState({ hostChecks: {} });\n  }\n\n  render() {\n    return (\n      <Drawer\n        closable\n        title={<span><Icon type=\"deployment-unit\" /> 配置机器</span>}\n        placement=\"right\"\n        visible={this.props.layers.hostListVisible}\n        onClose={() => this.props.layers.hostListVisible = false}\n        zIndex={500}\n        width=\"100vw\"\n        drawerStyle={{ background: '#f0f2f5' }}\n        bodyStyle={{ padding: 0 }}\n      >\n        <Layout.Content style={{ background: '#FFF', padding: '16px' }}>\n          <Button type=\"primary\" onClick={() => this.props.layers.hostAddVisible = true} style={{ marginRight: '10px' }}>创建机器</Button>\n          <Button.Group style={{ marginRight: '10px' }}>\n            <Button onClick={this.handleSelectAll}>全选</Button>\n            <Button onClick={this.handleDeSelectAll}>取消全选</Button>\n          </Button.Group>\n          <Button.Group style={{ marginRight: '10px' }}>\n            <Button>批量编辑</Button>\n            <Button>批量删除</Button>\n          </Button.Group>\n        </Layout.Content>\n        <HostView\n          hosts={this.props.hosts.hosts}\n          clickable\n          checkable\n          onHostClick={(item) => console.log(item)}\n          onCheckedHostsChange={this.handleCheckedHostsChange}\n          checkedHosts={this.state.hostChecks}\n        />\n      </Drawer>\n    );\n  }\n}\n\nexport default LayerHostList;\n","import { Drawer, Form, Input, Checkbox, Button, Select, Typography, Collapse } from 'antd';\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { toJS } from 'mobx';\n\n@inject('hosts')\n@observer\nclass AddForm extends React.Component {\n  state = {\n    isPubKeyAuth: false,\n    templateValue: undefined,\n  };\n\n  handleChangeAuthMethod = e => {\n    this.setState({\n      isPubKeyAuth: e.target.checked,\n    });\n  };\n\n  handleSubmit = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onSubmit) {\n          this.props.onSubmit(values, true);\n        }\n      }\n    });\n  };\n\n  handleSubmitAndNew = () => {\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if (this.props.onSubmit) {\n          this.props.onSubmit(values, false);\n          this.handleReset();\n        }\n      }\n    });\n  }\n\n  handleReset = () => {\n    this.props.form.resetFields();\n    this.setState({\n      templateValue: undefined,\n    });\n  };\n\n  handleTemplateChange = (id) => {\n    this.setState({\n      templateValue: id,\n    });\n    let v = toJS(this.props.hosts.hosts[id]);\n    this.props.form.setFieldsValue({\n      ...v,\n      name: '',\n      host: '',\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n      <Form layout=\"vertical\">\n        <Collapse bordered={false} defaultActiveKey={['import', 'basic']}>\n          <Collapse.Panel header=\"导入模板\" key=\"import\">\n            <Form.Item label=\"从现有主机配置复制\">\n              <Select\n                showSearch\n                placeholder=\"选择主机\"\n                optionFilterProp=\"children\"\n                filterOption={(input, option) => {\n                  const v = option.props.label.toLowerCase() + '|' + option.props.value.username + '@' + option.props.value.host + ':' + option.props.value.port;\n                  return v.indexOf(input.toLowerCase()) >= 0;\n                }}\n                optionLabelProp=\"label\"\n                onChange={this.handleTemplateChange}\n                value={this.state.templateValue}\n              >\n                {Object.values(this.props.hosts.hosts).map(v => {\n                  return (\n                    <Select.Option value={v.id} label={v.name} key={v.id}>\n                      <div>{v.name}</div>\n                      <div><Typography.Text disabled>{v.username}@{v.host}:{v.port}</Typography.Text></div>\n                    </Select.Option>\n                  )\n                })}\n              </Select>\n            </Form.Item>\n          </Collapse.Panel>\n          <Collapse.Panel header=\"详细配置\" key=\"basic\">\n            <Form.Item label=\"唯一名称\">\n              {getFieldDecorator('name')(\n                <Input placeholder=\"留空自动生成\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"地址\">\n              {getFieldDecorator('host', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入主机地址',\n                  },\n                ],\n              })(\n                <Input placeholder=\"主机地址，IP 或域名\" />\n              )}\n            </Form.Item>\n            <Form.Item label=\"端口\">\n              {getFieldDecorator('port', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入端口',\n                  },\n                ],\n                initialValue: '22',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item label=\"登录用户名\">\n              {getFieldDecorator('username', {\n                rules: [\n                  {\n                    required: true,\n                    message: '请输入登录用户名',\n                  },\n                ],\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator('isPubKeyAuth', {\n                initialValue: false,\n              })(\n                <Checkbox checked={this.state.isPubKeyAuth} onChange={this.handleChangeAuthMethod}>使用私钥登录</Checkbox>\n              )}\n            </Form.Item>\n            {this.state.isPubKeyAuth ? (\n              <>\n                <Form.Item label=\"私钥\">\n                  {getFieldDecorator('privateKey', {\n                    rules: [\n                      {\n                        required: true,\n                        message: '请输入私钥',\n                      },\n                    ],\n                  })(\n                    <Input.TextArea />\n                  )}\n                </Form.Item>\n                <Form.Item label=\"私钥密码\">\n                  {getFieldDecorator('privateKeyPassword')(\n                    <Input.Password />\n                  )}\n                </Form.Item>\n              </>\n            ) : (\n              <Form.Item label=\"密码\">\n                {getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入登录密码',\n                    },\n                  ],\n                })(\n                  <Input.Password />\n                )}\n              </Form.Item>\n            )}\n          </Collapse.Panel>\n          <Collapse.Panel header=\"高级配置\" key=\"advanced\">\n            <Form.Item label=\"位置标签: DC\">\n              {getFieldDecorator('dc', {\n                initialValue: '',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n            <Form.Item label=\"位置标签: Rack\">\n              {getFieldDecorator('rack', {\n                initialValue: '',\n              })(\n                <Input />\n              )}\n            </Form.Item>\n          </Collapse.Panel>\n        </Collapse>\n        <div style={{ margin: '16px' }}>\n          <Button type=\"primary\" onClick={this.handleSubmit}>添加</Button>&nbsp;\n          <Button onClick={this.handleSubmitAndNew}>保存并添加下一个</Button>&nbsp;\n          <Button onClick={this.handleReset}>重置</Button>\n        </div>\n      </Form>\n    );\n  }\n}\n\nconst AddFormWrapper = Form.create({ name: 'add_form' })(AddForm);\n\n@inject('layers', 'hosts')\n@observer\nclass LayerHostAdd extends React.Component {\n  handleSubmit = (values, hide) => {\n    if (this.props.hosts.addHost(values)) {\n      if (hide) {\n        this.props.layers.hostAddVisible = false;\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Drawer\n        closable\n        destroyOnClose\n        title=\"添加 SSH 远程主机\"\n        placement=\"right\"\n        visible={this.props.layers.hostAddVisible}\n        onClose={() => this.props.layers.hostAddVisible = false}\n        zIndex={501}\n        width={400}\n        bodyStyle={{ padding: 0 }}\n      >\n        <AddFormWrapper onSubmit={this.handleSubmit} />\n      </Drawer>\n    );\n  }\n}\n\n\nexport default LayerHostAdd;\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Sidemenu from './Sidemenu';\nimport { Layout } from 'antd';\nimport './App.css';\n\nimport Home from './Home';\nimport DeployMain from './deploy/Main';\nimport Progress from './Progress';\nimport LayerHostList from './layers/HostList';\nimport LayerHostAdd from './layers/HostAdd';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sidemenu />\n        <Layout.Content>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/deploy\">\n              <DeployMain />\n            </Route>\n            <Route path=\"/progress/:id\" component={Progress} />\n          </Switch>\n        </Layout.Content>\n        <LayerHostList />\n        <LayerHostAdd />\n      </Layout>\n    );\n  }\n}\n","import { observable } from 'mobx';\n\nclass Store {\n  @observable hostListVisible = false;\n  @observable hostAddVisible = false;\n}\n\nconst store = new Store();\n\nexport default store;\n","import { Modal } from 'antd';\nimport { observable, action } from 'mobx';\nimport uniqid from 'uniqid';\n\nclass Store {\n  @observable hosts = {};\n\n  constructor() {\n    this.addHost({\n      name: 'uhost-ap3kilnh',\n      host: '10.9.164.80',\n      username: 'root',\n      password: 'abc',\n      port: 22,\n      dc: 'ucloud-1',\n    });\n    this.addHost({\n      name: 'uhost-kesclakw',\n      host: '10.9.136.246',\n      username: 'root',\n      password: 'abc',\n      port: 22,\n      dc: 'ucloud-1',\n      rack: 'test_rack'\n    });\n    this.addHost({\n      name: 'uhost-ou3hu5yx',\n      host: '10.9.158.146',\n      username: 'root',\n      password: 'abc',\n      port: 22,\n    });\n    this.addHost({\n      name: 'uhost-x2ofoajg',\n      host: '10.9.111.178',\n      username: 'root',\n      password: 'abc',\n      port: 22,\n      dc: 'ucloud-1',\n      rack: 'test_rack'\n    });\n  }\n\n  @action.bound\n  addHost(opts) {\n    if (!opts.name) {\n      opts.name = `${opts.username}@${opts.host}:${opts.port}`;\n    }\n    opts.port = parseInt(opts.port);\n    if (!opts.port) {\n      Modal.error({\n        title: '添加失败',\n        content: `无效端口`,\n      });\n      return false;\n    }\n    if (Object.values(this.hosts).map(v => v.host).indexOf(opts.host) !== -1) {\n      Modal.error({\n        title: '添加失败',\n        content: `主机 ${opts.host} 已存在，不能重复添加`,\n      });\n      return false;\n    }\n    // TODO: 检查 name 格式\n    if (Object.values(this.hosts).map(v => v.name).indexOf(opts.name) !== -1) {\n      Modal.error({\n        title: '添加失败',\n        content: `唯一名称 ${opts.name} 已存在，不能重复添加`,\n      });\n      return false;\n    }\n    opts.id = uniqid();\n    opts.dc = opts.dc || '';\n    opts.rack = opts.rack || '';\n    this.hosts[opts.id] = opts;\n    return true;\n  }\n}\n\nconst store = new Store();\n\nexport default store;\n","import { observable, action, toJS } from 'mobx';\nimport uniqid from 'uniqid';\n\nclass Store {\n  @observable deployments = {};\n\n  @action.bound\n  addDeployment(hosts, config, topology) {\n    const d = {\n      id: uniqid(),\n      hosts: JSON.parse(JSON.stringify(hosts)),\n      config: JSON.parse(JSON.stringify(config)),\n      topology: JSON.parse(JSON.stringify(topology)),\n    };\n    this.deployments[d.id] = d;\n    return true;\n  }\n}\n\nconst store = new Store();\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nimport storeLayers from './store/layers';\nimport storeHosts from './store/hosts';\nimport storeDeployments from './store/deployments';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider\n      hosts={storeHosts}\n      deployments={storeDeployments}\n      layers={storeLayers}\n    >\n      <App />\n    </Provider>\n  </BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}